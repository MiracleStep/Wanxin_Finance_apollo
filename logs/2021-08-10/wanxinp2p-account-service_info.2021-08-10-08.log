[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:09,846 INFO [main][DefaultApplicationProvider.java:85] - App ID is set to account-service by app.id property from System Property
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:09,861 INFO [main][DefaultServerProvider.java:108] - Environment is set to [dev] by JVM system property 'env'.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:09,970 WARN [main][DefaultMetaServerProvider.java:39] - Could not find meta server address, because it is not available in neither (1) JVM system property 'apollo.meta', (2) OS env variable 'APOLLO_META' (3) property 'apollo.meta' from server.properties nor (4) property 'apollo.meta' from app.properties
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:09,980 INFO [main][MetaDomainConsts.java:93] - Located meta server address http://192.168.85.131:8080 for env DEV from com.ctrip.framework.apollo.core.internals.LegacyMetaServerProvider
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:13,822 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:14,323 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:14,822 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:14,830 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:15,334 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:15,832 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:15,847 WARN [Apollo-RemoteConfigLongPollService-1][RemoteConfigLongPollService.java:193] - Long polling failed, will retry in 1 seconds. appId: account-service, cluster: DEFAULT, namespaces: application+micro_service.spring-boot-druid, long polling url: null, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:15,853 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:16,343 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:16,844 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:16,854 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:16,868 WARN [Apollo-RemoteConfigLongPollService-1][RemoteConfigLongPollService.java:193] - Long polling failed, will retry in 2 seconds. appId: account-service, cluster: DEFAULT, namespaces: micro_service.spring-boot-http+application+micro_service.spring-boot-druid+micro_service.spring-eureka, long polling url: null, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:17,379 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:17,857 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:17,867 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:18,368 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:18,866 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:18,875 WARN [Apollo-RemoteConfigLongPollService-1][RemoteConfigLongPollService.java:193] - Long polling failed, will retry in 4 seconds. appId: account-service, cluster: DEFAULT, namespaces: micro_service.spring-boot-http+application+micro_service.spring-boot-druid+micro_service.spring-eureka+micro_service.spring-hystrix, long polling url: null, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:18,885 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:19,375 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:19,879 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:19,887 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:20,390 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:20,888 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:20,899 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:21,398 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:21,901 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:21,910 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:22,411 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:22,886 WARN [Apollo-RemoteConfigLongPollService-1][RemoteConfigLongPollService.java:193] - Long polling failed, will retry in 8 seconds. appId: account-service, cluster: DEFAULT, namespaces: micro_service.spring-boot-redis+micro_service.spring-boot-http+micro_service.mybatis-plus+application+micro_service.spring-rocketmq+micro_service.spring-ribbon+micro_service.spring-boot-druid+micro_service.spring-eureka+micro_service.spring-hystrix, long polling url: null, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:22,919 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://192.168.85.131:8080/services/config?appId=account-service&ip=192.168.0.102
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:22,922 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:28,466 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:28,470 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:28,616 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 120ms. Found 0 repository interfaces.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:28,869 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:29,078 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'com.ctrip.framework.apollo.spring.boot.ApolloAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:29,495 INFO [main][GenericScope.java:294] - BeanFactory id=34dac0c9-0572-3343-8ad1-1c125b5bed0c
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:29,553 WARN [main][PropertySourcesDeducer.java:75] - Multiple PropertySourcesPlaceholderConfigurer beans registered [propertySourcesPlaceholderConfigurer, org.springframework.context.support.PropertySourcesPlaceholderConfigurer], falling back to Environment
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:29,603 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:29,625 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration$$EnhancerBySpringCGLIB$$8068277a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:29,645 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketmq-org.apache.rocketmq.spring.autoconfigure.RocketMQProperties' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:33,311 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'defaultMQProducer' of type [org.apache.rocketmq.client.producer.DefaultMQProducer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:33,314 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$b365980f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:33,330 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$65b25a28] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:33,333 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$20c94017] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:33,346 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:33,350 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:33,357 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$4794b745] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:33,365 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:33,367 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$9571359e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:33,425 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:33,426 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:33,433 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:33,437 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:33,470 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:43,341 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketMQTemplate' of type [org.apache.rocketmq.spring.core.RocketMQTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:43,342 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'transactionHandlerRegistry' of type [org.apache.rocketmq.spring.config.TransactionHandlerRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:43,400 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$57d2187e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:43,451 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:43,648 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:43,661 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$73ec1b7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:44,053 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 53030 (http)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:44,070 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-53030"]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:44,079 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:44,080 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:44,088 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\jdk1.8.0_91\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\VMware\VMware Workstation\bin\;D:\Oracle\bin;C:\Program Files\AdoptOpenJDK\jdk-11.0.9.101-hotspot\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\python38;D:\MySQL\mysql-8.0.19-winx64;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\MySQL\mysql-5.6.47-winx64\bin;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\python3.8;D:\python3.8\Scripts;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\java\jdk-14.0.2\bin;D:\Program Files (x86)\Git\cmd;D:\jdk1.8.0_91\bin;C:\MinGW\bin;C:\Program Files\Pandoc\;D:\apache-maven-3.6.3\bin;C:\Program Files (x86)\Common Files\Thunder Network\KanKan\Codecs;D:\nodejs9.4\;D:\nodejs9.4\npm_modules;D:\matlab\runtime\win64;D:\matlab\bin;D:\matlab\polyspace\bin;C:\Program Files\erl9.3\bin;D:\ffmpeg-20180227-fa0c9d6-win64-static\bin;C:\Program Files\OpenSSL-Win64\bin;D:\Ruby25\bin;C:\Users\suxiang\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\Microsoft VS Code\bin;D:\MySQL\mysql-8.0.19-winx64\bin;D:\python3.8;D:\Program Files (x86)\WebStorm 2021.1.1\bin;;C:\Program Files (x86)\GitHub CLI\;D:\Program Files (x86)\PyCharm 2021.1.1\bin;;D:\Program Files (x86)\IntelliJ IDEA 2021.1.1\bin;;D:\Program Files (x86)\CLion 2020.1\bin;;C:\Users\suxiang\AppData\Local\GitHubDesktop\bin;C:\Users\suxiang\AppData\Roaming\npm;;.]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:44,275 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:44,275 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 21330 ms
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:44,507 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:44,508 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:44,523 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@77fb1002
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:44,647 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:45,364 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:45,689 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:45,689 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:48,128 INFO [main][InetUtils.java:170] - Cannot determine local hostname
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:56,074 WARN [main][AbstractApplicationContext.java:557] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountServiceImpl': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'smsEnable' in value "${smsEnable}"
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:56,104 INFO [main][DruidDataSource.java:1885] - {dataSource-1} closing ...
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:56,109 INFO [main][DruidDataSource.java:1955] - {dataSource-1} closed
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:56,116 INFO [main][DirectJDKLog.java:173] - Stopping service [Tomcat]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:56,138 WARN [main][DirectJDKLog.java:173] - The web application [account] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
 java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:907)
 java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1302)
 java.net.InetAddress.getAllByName0(InetAddress.java:1255)
 java.net.InetAddress.getAllByName0(InetAddress.java:1232)
 java.net.InetAddress.getHostFromNameService(InetAddress.java:613)
 java.net.InetAddress.getHostName(InetAddress.java:538)
 java.net.InetAddress.getHostName(InetAddress.java:510)
 org.springframework.cloud.commons.util.InetUtils$$Lambda$89/1988746735.call(Unknown Source)
 java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
 java.util.concurrent.FutureTask.run(FutureTask.java)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
 java.lang.Thread.run(Thread.java:745)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:56,139 WARN [main][DirectJDKLog.java:173] - The web application [account] appears to have started a thread named [Apollo-SpringValueRegistry-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1067)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
 java.lang.Thread.run(Thread.java:745)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:56,164 INFO [main][ConditionEvaluationReportLoggingListener.java:142] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:53:56,214 ERROR [main][SpringApplication.java:858] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountServiceImpl': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'smsEnable' in value "${smsEnable}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$133/1178777373.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at cn.itcast.wanxinp2p.account.Wanxinp2pAccountServiceApplication.main(Wanxinp2pAccountServiceApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountServiceImpl': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'smsEnable' in value "${smsEnable}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:380)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$133/1178777373.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 20 more
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'smsEnable' in value "${smsEnable}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:172)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:124)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:237)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:211)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:175)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$$Lambda$166/1181191753.resolveStringValue(Unknown Source)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:851)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	... 32 more
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:57:57,816 INFO [main][DefaultApplicationProvider.java:85] - App ID is set to account-service by app.id property from System Property
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:57:57,823 INFO [main][DefaultServerProvider.java:108] - Environment is set to [dev] by JVM system property 'env'.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:57:57,895 WARN [main][DefaultMetaServerProvider.java:39] - Could not find meta server address, because it is not available in neither (1) JVM system property 'apollo.meta', (2) OS env variable 'APOLLO_META' (3) property 'apollo.meta' from server.properties nor (4) property 'apollo.meta' from app.properties
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:57:57,901 INFO [main][MetaDomainConsts.java:93] - Located meta server address http://192.168.85.131:8080 for env DEV from com.ctrip.framework.apollo.core.internals.LegacyMetaServerProvider
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:03,998 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:05,132 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:05,134 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:05,158 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 10ms. Found 0 repository interfaces.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:05,250 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:05,323 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'com.ctrip.framework.apollo.spring.boot.ApolloAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:05,488 INFO [main][GenericScope.java:294] - BeanFactory id=34dac0c9-0572-3343-8ad1-1c125b5bed0c
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:05,511 WARN [main][PropertySourcesDeducer.java:75] - Multiple PropertySourcesPlaceholderConfigurer beans registered [propertySourcesPlaceholderConfigurer, org.springframework.context.support.PropertySourcesPlaceholderConfigurer], falling back to Environment
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:05,537 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:05,549 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration$$EnhancerBySpringCGLIB$$6ed902bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:05,564 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketmq-org.apache.rocketmq.spring.autoconfigure.RocketMQProperties' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:08,095 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'defaultMQProducer' of type [org.apache.rocketmq.client.producer.DefaultMQProducer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:08,097 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$a1d67350] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:08,101 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$54233569] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:08,104 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$f3a1b58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:08,109 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:08,111 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:08,116 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$36059286] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:08,121 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:08,122 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$83e210df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:08,157 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:08,158 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:08,164 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:08,168 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:08,192 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:15,512 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketMQTemplate' of type [org.apache.rocketmq.spring.core.RocketMQTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:15,514 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'transactionHandlerRegistry' of type [org.apache.rocketmq.spring.config.TransactionHandlerRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:15,588 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4642f3bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:15,616 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:15,627 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:15,638 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$625cf6bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:16,020 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 53030 (http)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:16,050 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-53030"]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:16,060 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:16,061 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:16,070 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\jdk1.8.0_91\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\VMware\VMware Workstation\bin\;D:\Oracle\bin;C:\Program Files\AdoptOpenJDK\jdk-11.0.9.101-hotspot\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\python38;D:\MySQL\mysql-8.0.19-winx64;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\MySQL\mysql-5.6.47-winx64\bin;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\python3.8;D:\python3.8\Scripts;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\java\jdk-14.0.2\bin;D:\Program Files (x86)\Git\cmd;D:\jdk1.8.0_91\bin;C:\MinGW\bin;C:\Program Files\Pandoc\;D:\apache-maven-3.6.3\bin;C:\Program Files (x86)\Common Files\Thunder Network\KanKan\Codecs;D:\nodejs9.4\;D:\nodejs9.4\npm_modules;D:\matlab\runtime\win64;D:\matlab\bin;D:\matlab\polyspace\bin;C:\Program Files\erl9.3\bin;D:\ffmpeg-20180227-fa0c9d6-win64-static\bin;C:\Program Files\OpenSSL-Win64\bin;D:\Ruby25\bin;C:\Users\suxiang\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\Microsoft VS Code\bin;D:\MySQL\mysql-8.0.19-winx64\bin;D:\python3.8;D:\Program Files (x86)\WebStorm 2021.1.1\bin;;C:\Program Files (x86)\GitHub CLI\;D:\Program Files (x86)\PyCharm 2021.1.1\bin;;D:\Program Files (x86)\IntelliJ IDEA 2021.1.1\bin;;D:\Program Files (x86)\CLion 2020.1\bin;;C:\Users\suxiang\AppData\Local\GitHubDesktop\bin;C:\Users\suxiang\AppData\Roaming\npm;;.]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:16,277 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:16,277 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 12265 ms
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:16,560 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:16,561 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:16,574 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1fcc3461
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:16,699 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:17,247 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:17,715 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:17,715 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:20,187 INFO [main][InetUtils.java:170] - Cannot determine local hostname
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:21,415 WARN [main][AbstractApplicationContext.java:557] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountServiceImpl': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'smsEnable' in value "${smsEnable}"
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:21,430 INFO [main][DruidDataSource.java:1885] - {dataSource-1} closing ...
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:21,434 INFO [main][DruidDataSource.java:1955] - {dataSource-1} closed
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:21,439 INFO [main][DirectJDKLog.java:173] - Stopping service [Tomcat]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:21,444 WARN [main][DirectJDKLog.java:173] - The web application [account] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
 java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:907)
 java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1302)
 java.net.InetAddress.getAllByName0(InetAddress.java:1255)
 java.net.InetAddress.getAllByName0(InetAddress.java:1232)
 java.net.InetAddress.getHostFromNameService(InetAddress.java:613)
 java.net.InetAddress.getHostName(InetAddress.java:538)
 java.net.InetAddress.getHostName(InetAddress.java:510)
 org.springframework.cloud.commons.util.InetUtils$$Lambda$89/609887969.call(Unknown Source)
 java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
 java.util.concurrent.FutureTask.run(FutureTask.java)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
 java.lang.Thread.run(Thread.java:745)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:21,444 WARN [main][DirectJDKLog.java:173] - The web application [account] appears to have started a thread named [Apollo-SpringValueRegistry-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1067)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
 java.lang.Thread.run(Thread.java:745)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:21,458 INFO [main][ConditionEvaluationReportLoggingListener.java:142] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:58:21,468 ERROR [main][SpringApplication.java:858] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountServiceImpl': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'smsEnable' in value "${smsEnable}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$133/703627308.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at cn.itcast.wanxinp2p.account.Wanxinp2pAccountServiceApplication.main(Wanxinp2pAccountServiceApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountServiceImpl': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'smsEnable' in value "${smsEnable}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:380)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$133/703627308.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 20 more
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'smsEnable' in value "${smsEnable}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:172)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:124)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:237)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:211)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:175)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$$Lambda$166/1775675341.resolveStringValue(Unknown Source)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:851)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	... 32 more
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:19,589 INFO [main][DefaultApplicationProvider.java:85] - App ID is set to account-service by app.id property from System Property
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:19,594 INFO [main][DefaultServerProvider.java:108] - Environment is set to [dev] by JVM system property 'env'.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:19,652 WARN [main][DefaultMetaServerProvider.java:39] - Could not find meta server address, because it is not available in neither (1) JVM system property 'apollo.meta', (2) OS env variable 'APOLLO_META' (3) property 'apollo.meta' from server.properties nor (4) property 'apollo.meta' from app.properties
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:19,658 INFO [main][MetaDomainConsts.java:93] - Located meta server address http://192.168.85.131:8080 for env DEV from com.ctrip.framework.apollo.core.internals.LegacyMetaServerProvider
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:25,869 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:26,843 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:26,846 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:26,868 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 9ms. Found 0 repository interfaces.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:26,957 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:27,027 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'com.ctrip.framework.apollo.spring.boot.ApolloAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:27,164 INFO [main][GenericScope.java:294] - BeanFactory id=34dac0c9-0572-3343-8ad1-1c125b5bed0c
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:27,185 WARN [main][PropertySourcesDeducer.java:75] - Multiple PropertySourcesPlaceholderConfigurer beans registered [propertySourcesPlaceholderConfigurer, org.springframework.context.support.PropertySourcesPlaceholderConfigurer], falling back to Environment
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:27,205 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:27,215 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration$$EnhancerBySpringCGLIB$$209d50d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:27,229 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketmq-org.apache.rocketmq.spring.autoconfigure.RocketMQProperties' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:29,297 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'defaultMQProducer' of type [org.apache.rocketmq.client.producer.DefaultMQProducer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:29,299 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$539ac16a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:29,303 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$5e78383] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:29,305 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$c0fe6972] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:29,308 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:29,310 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:29,314 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$e7c9e0a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:29,319 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:29,320 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$35a65ef9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:29,352 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:29,353 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:29,356 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:29,359 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:29,378 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:35,029 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketMQTemplate' of type [org.apache.rocketmq.spring.core.RocketMQTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:35,030 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'transactionHandlerRegistry' of type [org.apache.rocketmq.spring.config.TransactionHandlerRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:35,087 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f80741d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:35,110 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:35,120 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:35,129 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$142144d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:35,435 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 53030 (http)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:35,450 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-53030"]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:35,458 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:35,459 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:35,465 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\jdk1.8.0_91\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\VMware\VMware Workstation\bin\;D:\Oracle\bin;C:\Program Files\AdoptOpenJDK\jdk-11.0.9.101-hotspot\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\python38;D:\MySQL\mysql-8.0.19-winx64;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\MySQL\mysql-5.6.47-winx64\bin;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\python3.8;D:\python3.8\Scripts;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\java\jdk-14.0.2\bin;D:\Program Files (x86)\Git\cmd;D:\jdk1.8.0_91\bin;C:\MinGW\bin;C:\Program Files\Pandoc\;D:\apache-maven-3.6.3\bin;C:\Program Files (x86)\Common Files\Thunder Network\KanKan\Codecs;D:\nodejs9.4\;D:\nodejs9.4\npm_modules;D:\matlab\runtime\win64;D:\matlab\bin;D:\matlab\polyspace\bin;C:\Program Files\erl9.3\bin;D:\ffmpeg-20180227-fa0c9d6-win64-static\bin;C:\Program Files\OpenSSL-Win64\bin;D:\Ruby25\bin;C:\Users\suxiang\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\Microsoft VS Code\bin;D:\MySQL\mysql-8.0.19-winx64\bin;D:\python3.8;D:\Program Files (x86)\WebStorm 2021.1.1\bin;;C:\Program Files (x86)\GitHub CLI\;D:\Program Files (x86)\PyCharm 2021.1.1\bin;;D:\Program Files (x86)\IntelliJ IDEA 2021.1.1\bin;;D:\Program Files (x86)\CLion 2020.1\bin;;C:\Users\suxiang\AppData\Local\GitHubDesktop\bin;C:\Users\suxiang\AppData\Roaming\npm;;.]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:35,630 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:35,631 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 9753 ms
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:35,755 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:35,757 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:35,768 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1f12d5e0
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:35,872 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:36,163 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:37,176 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:37,176 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:38,759 INFO [main][InetUtils.java:170] - Cannot determine local hostname
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:39,552 WARN [main][AbstractApplicationContext.java:557] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountServiceImpl': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'smsEnable' in value "${smsEnable}"
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:39,567 INFO [main][DruidDataSource.java:1885] - {dataSource-1} closing ...
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:39,571 INFO [main][DruidDataSource.java:1955] - {dataSource-1} closed
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:39,576 INFO [main][DirectJDKLog.java:173] - Stopping service [Tomcat]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:39,581 WARN [main][DirectJDKLog.java:173] - The web application [account] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
 java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:907)
 java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1302)
 java.net.InetAddress.getAllByName0(InetAddress.java:1255)
 java.net.InetAddress.getAllByName0(InetAddress.java:1232)
 java.net.InetAddress.getHostFromNameService(InetAddress.java:613)
 java.net.InetAddress.getHostName(InetAddress.java:538)
 java.net.InetAddress.getHostName(InetAddress.java:510)
 org.springframework.cloud.commons.util.InetUtils$$Lambda$89/237297104.call(Unknown Source)
 java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
 java.util.concurrent.FutureTask.run(FutureTask.java)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
 java.lang.Thread.run(Thread.java:745)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:39,582 WARN [main][DirectJDKLog.java:173] - The web application [account] appears to have started a thread named [Apollo-SpringValueRegistry-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1067)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
 java.lang.Thread.run(Thread.java:745)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:39,594 INFO [main][ConditionEvaluationReportLoggingListener.java:142] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-10 08:59:39,602 ERROR [main][SpringApplication.java:858] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accountController': Unsatisfied dependency expressed through field 'accountService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountServiceImpl': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'smsEnable' in value "${smsEnable}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$133/809822663.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at cn.itcast.wanxinp2p.account.Wanxinp2pAccountServiceApplication.main(Wanxinp2pAccountServiceApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'accountServiceImpl': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'smsEnable' in value "${smsEnable}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:380)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$133/809822663.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 20 more
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'smsEnable' in value "${smsEnable}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:172)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:124)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:237)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:211)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:175)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$$Lambda$166/827248723.resolveStringValue(Unknown Source)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:851)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	... 32 more

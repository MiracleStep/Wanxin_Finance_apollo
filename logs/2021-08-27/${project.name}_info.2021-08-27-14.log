[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:00:58,601 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:03,648 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:04,750 INFO [hmilyTransaction-hmily-transaction-self-recovery-78][LogUtil.java:87] - self recovery execute delayTime:60
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:05,345 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:13,408 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:15,345 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:18,627 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:25,346 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:25,977 INFO [http-nio-53060-exec-3][ChainedDynamicProperty.java:115] - Flipping property: consumer-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:25,979 INFO [http-nio-53060-exec-3][ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-consumer-service
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:25,979 INFO [http-nio-53060-exec-3][BaseLoadBalancer.java:197] - Client: consumer-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=consumer-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:25,980 INFO [http-nio-53060-exec-3][DynamicServerListLoadBalancer.java:222] - Using serverListUpdater PollingServerListUpdater
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:25,982 INFO [http-nio-53060-exec-3][ChainedDynamicProperty.java:115] - Flipping property: consumer-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:25,982 INFO [http-nio-53060-exec-3][DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client consumer-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=consumer-service,current list of Servers=[192.168.137.1:53050],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.137.1:53050;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@28d0b867
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:25,991 DEBUG [http-nio-53050-exec-6][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:25,991 DEBUG [http-nio-53050-exec-6][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:25,992 DEBUG [http-nio-53050-exec-6][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:26,090 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT( 1 ) FROM project WHERE CONSUMER_ID = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:26,107 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - ==> Parameters: 1010(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:26,187 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:26,188 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Logic SQL: SELECT COUNT( 1 ) FROM project 
 
 WHERE CONSUMER_ID = ?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:26,188 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=CONSUMER_ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT( 1 ) FROM project 
 
 WHERE CONSUMER_ID = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=16, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=( 1 ), alias=Optional.absent(), derivedAggregationSelectItems=[], index=-1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:26,189 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT( 1 ) FROM project_0 
 
 WHERE CONSUMER_ID = ? ::: [1010]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:26,190 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT( 1 ) FROM project_1 
 
 WHERE CONSUMER_ID = ? ::: [1010]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:26,227 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:35,347 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:45,347 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:45,961 WARN [http-nio-53010-exec-8][SendErrorFilter.java:81] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.hystrix.exception.HystrixRuntimeException: transaction-service failed and no fallback available.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:822)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:807)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	... 100 more
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:109)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient$$Lambda$854/1039261542.doWithRetry(Unknown Source)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 157 more
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:50,146 INFO [PollingServerListUpdater-0][ChainedDynamicProperty.java:115] - Flipping property: consumer-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:50,566 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - ==>  Preparing: INSERT INTO project ( ID, CONSUMER_ID, USER_NO, PROJECT_NO, NAME, DESCRIPTION, TYPE, PERIOD, ANNUAL_RATE, BORROWER_ANNUAL_RATE, COMMISSION_ANNUAL_RATE, REPAYMENT_WAY, AMOUNT, PROJECT_STATUS, CREATE_DATE, STATUS, IS_ASSIGNMENT ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:50,621 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - ==> Parameters: 1431149943057895426(Long), 1010(Long), USR_DAF43812CDB04CA998F1CB62A899F766(String), PRO_3C20DCBF41DD4786B890046EC9360CDC(String), 谭蚜先生第1次借款(String), 个人生活消费(String), NEW(String), 360(Integer), 0.10(BigDecimal), 0.15(BigDecimal), 0.05(BigDecimal), FIXED_REPAYMENT(String), 2000(BigDecimal), COLLECTING(String), 2021-08-27 15:01:26.001(Timestamp), 0(Integer), 0(Integer)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:51,156 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:51,157 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Logic SQL: INSERT INTO project  ( ID,
CONSUMER_ID,
USER_NO,
PROJECT_NO,
NAME,
DESCRIPTION,
TYPE,
PERIOD,
ANNUAL_RATE,
BORROWER_ANNUAL_RATE,
COMMISSION_ANNUAL_RATE,
REPAYMENT_WAY,
AMOUNT,
PROJECT_STATUS,
CREATE_DATE,

STATUS,
IS_ASSIGNMENT )  VALUES  ( ?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,

?,
? )
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:51,158 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0}), Condition(column=Column(name=CONSUMER_ID, tableName=project), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=1})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=21)], parametersIndex=17, logicSQL=INSERT INTO project  ( ID,
CONSUMER_ID,
USER_NO,
PROJECT_NO,
NAME,
DESCRIPTION,
TYPE,
PERIOD,
ANNUAL_RATE,
BORROWER_ANNUAL_RATE,
COMMISSION_ANNUAL_RATE,
REPAYMENT_WAY,
AMOUNT,
PROJECT_STATUS,
CREATE_DATE,

STATUS,
IS_ASSIGNMENT )  VALUES  ( ?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,

?,
? )), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[ID, CONSUMER_ID, USER_NO, PROJECT_NO, NAME, DESCRIPTION, TYPE, PERIOD, ANNUAL_RATE, BORROWER_ANNUAL_RATE, COMMISSION_ANNUAL_RATE, REPAYMENT_WAY, AMOUNT, PROJECT_STATUS, CREATE_DATE, STATUS, IS_ASSIGNMENT], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@57b37bca, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@72dad21c, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4c1cde3f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@653dd509, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@299c9f4f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d72f252, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@27b538e5, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2cab3487, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@6180a0ba, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@7bfa3eba, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@75065330, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@fc4e1b, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@649dbbce, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4e384609, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@960032d, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@6b0e088c, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@62448de8])])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:51,162 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds0 ::: INSERT INTO project_0   (ID, CONSUMER_ID, USER_NO, PROJECT_NO, NAME, DESCRIPTION, TYPE, PERIOD, ANNUAL_RATE, BORROWER_ANNUAL_RATE, COMMISSION_ANNUAL_RATE, REPAYMENT_WAY, AMOUNT, PROJECT_STATUS, CREATE_DATE, STATUS, IS_ASSIGNMENT) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ::: [1431149943057895426, 1010, USR_DAF43812CDB04CA998F1CB62A899F766, PRO_3C20DCBF41DD4786B890046EC9360CDC, 谭蚜先生第1次借款, 个人生活消费, NEW, 360, 0.10, 0.15, 0.05, FIXED_REPAYMENT, 2000, COLLECTING, 2021-08-27T15:01:26.001+0800, 0, 0]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:51,177 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - <==    Updates: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:55,347 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:57,700 INFO [hmilyTransaction-hmily-transaction-self-recovery-26][LogUtil.java:87] - self recovery execute delayTime:60
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:01:57,863 INFO [hmilyTransaction-hmily-transaction-self-recovery-52][LogUtil.java:87] - self recovery execute delayTime:60
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:02:04,750 INFO [hmilyTransaction-hmily-transaction-self-recovery-78][LogUtil.java:87] - self recovery execute delayTime:60
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:02:05,348 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:02:15,349 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 1ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:02:25,349 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:02:35,350 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:02:45,350 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:02:55,351 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:02:57,702 INFO [hmilyTransaction-hmily-transaction-self-recovery-26][LogUtil.java:87] - self recovery execute delayTime:60
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:02:57,864 INFO [hmilyTransaction-hmily-transaction-self-recovery-52][LogUtil.java:87] - self recovery execute delayTime:60
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:04,753 INFO [hmilyTransaction-hmily-transaction-self-recovery-78][LogUtil.java:87] - self recovery execute delayTime:60
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:05,351 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:08,294 DEBUG [http-nio-53050-exec-9][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:08,294 DEBUG [http-nio-53050-exec-9][BaseJdbcLogger.java:159] - ==> Parameters: 18678544100(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:08,296 DEBUG [http-nio-53050-exec-9][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:08,292 ERROR [http-nio-53060-exec-5][GlobalExceptionHandler.java:45] - 【系统异常】{}
java.lang.NullPointerException
	at cn.itcast.wanxinp2p.transaction.service.ProjectServiceImpl.queryProjectsByQueryDTO(ProjectServiceImpl.java:142)
	at cn.itcast.wanxinp2p.transaction.service.ProjectServiceImpl$$FastClassBySpringCGLIB$$997f0e9f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.itcast.wanxinp2p.transaction.service.ProjectServiceImpl$$EnhancerBySpringCGLIB$$f092906e.queryProjectsByQueryDTO(<generated>)
	at cn.itcast.wanxinp2p.transaction.controller.TransactionController.queryProjects(TransactionController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:09,851 DEBUG [http-nio-53050-exec-10][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:09,851 DEBUG [http-nio-53050-exec-10][BaseJdbcLogger.java:159] - ==> Parameters: 18678544100(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:09,852 DEBUG [http-nio-53050-exec-10][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:10,184 DEBUG [http-nio-53050-exec-1][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:10,184 DEBUG [http-nio-53050-exec-1][BaseJdbcLogger.java:159] - ==> Parameters: 18678544100(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:10,185 DEBUG [http-nio-53050-exec-1][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:11,410 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:12,416 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.137.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:15,376 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 25ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:15,608 DEBUG [http-nio-53050-exec-2][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:15,609 DEBUG [http-nio-53050-exec-2][BaseJdbcLogger.java:159] - ==> Parameters: 18678544100(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:15,610 DEBUG [http-nio-53050-exec-2][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:15,615 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT( 1 ) FROM project WHERE CONSUMER_ID = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:15,619 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==> Parameters: 9(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:15,620 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:15,620 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Logic SQL: SELECT COUNT( 1 ) FROM project 
 
 WHERE CONSUMER_ID = ?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:15,621 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=CONSUMER_ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT( 1 ) FROM project 
 
 WHERE CONSUMER_ID = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=16, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=( 1 ), alias=Optional.absent(), derivedAggregationSelectItems=[], index=1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:15,622 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT( 1 ) FROM project_0 
 
 WHERE CONSUMER_ID = ? ::: [9]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:15,623 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT( 1 ) FROM project_1 
 
 WHERE CONSUMER_ID = ? ::: [9]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:15,632 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:25,377 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:35,378 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:35,602 WARN [http-nio-53010-exec-8][SendErrorFilter.java:81] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.hystrix.exception.HystrixRuntimeException: transaction-service failed and no fallback available.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:822)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:807)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	... 100 more
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:109)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient$$Lambda$854/1039261542.doWithRetry(Unknown Source)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 157 more
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:37,659 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:37,664 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==>  Preparing: INSERT INTO project ( ID, CONSUMER_ID, USER_NO, PROJECT_NO, NAME, DESCRIPTION, TYPE, PERIOD, ANNUAL_RATE, BORROWER_ANNUAL_RATE, COMMISSION_ANNUAL_RATE, REPAYMENT_WAY, AMOUNT, PROJECT_STATUS, CREATE_DATE, STATUS, IS_ASSIGNMENT ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:37,669 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long), 9(Long), USR_F720319F5AE24FDDBE12685AEEDFCB61(String), PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5(String), 苏留先生第16次借款(String), 个人生活消费(String), NEW(String), 360(Integer), 0.10(BigDecimal), 0.15(BigDecimal), 0.05(BigDecimal), FIXED_REPAYMENT(String), 2000(BigDecimal), COLLECTING(String), 2021-08-27 15:03:15.613(Timestamp), 0(Integer), 0(Integer)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:37,670 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:37,670 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Logic SQL: INSERT INTO project  ( ID,
CONSUMER_ID,
USER_NO,
PROJECT_NO,
NAME,
DESCRIPTION,
TYPE,
PERIOD,
ANNUAL_RATE,
BORROWER_ANNUAL_RATE,
COMMISSION_ANNUAL_RATE,
REPAYMENT_WAY,
AMOUNT,
PROJECT_STATUS,
CREATE_DATE,

STATUS,
IS_ASSIGNMENT )  VALUES  ( ?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,

?,
? )
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:37,671 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0}), Condition(column=Column(name=CONSUMER_ID, tableName=project), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=1})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=21)], parametersIndex=17, logicSQL=INSERT INTO project  ( ID,
CONSUMER_ID,
USER_NO,
PROJECT_NO,
NAME,
DESCRIPTION,
TYPE,
PERIOD,
ANNUAL_RATE,
BORROWER_ANNUAL_RATE,
COMMISSION_ANNUAL_RATE,
REPAYMENT_WAY,
AMOUNT,
PROJECT_STATUS,
CREATE_DATE,

STATUS,
IS_ASSIGNMENT )  VALUES  ( ?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,

?,
? )), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[ID, CONSUMER_ID, USER_NO, PROJECT_NO, NAME, DESCRIPTION, TYPE, PERIOD, ANNUAL_RATE, BORROWER_ANNUAL_RATE, COMMISSION_ANNUAL_RATE, REPAYMENT_WAY, AMOUNT, PROJECT_STATUS, CREATE_DATE, STATUS, IS_ASSIGNMENT], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@57b37bca, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@72dad21c, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4c1cde3f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@653dd509, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@299c9f4f, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d72f252, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@27b538e5, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2cab3487, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@6180a0ba, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@7bfa3eba, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@75065330, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@fc4e1b, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@649dbbce, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4e384609, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@960032d, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@6b0e088c, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@62448de8])])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:37,672 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds1 ::: INSERT INTO project_1   (ID, CONSUMER_ID, USER_NO, PROJECT_NO, NAME, DESCRIPTION, TYPE, PERIOD, ANNUAL_RATE, BORROWER_ANNUAL_RATE, COMMISSION_ANNUAL_RATE, REPAYMENT_WAY, AMOUNT, PROJECT_STATUS, CREATE_DATE, STATUS, IS_ASSIGNMENT) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ::: [1431150392267853825, 9, USR_F720319F5AE24FDDBE12685AEEDFCB61, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 苏留先生第16次借款, 个人生活消费, NEW, 360, 0.10, 0.15, 0.05, FIXED_REPAYMENT, 2000, COLLECTING, 2021-08-27T15:03:15.613+0800, 0, 0]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:37,675 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - <==    Updates: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:45,378 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:55,379 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:57,704 INFO [hmilyTransaction-hmily-transaction-self-recovery-26][LogUtil.java:87] - self recovery execute delayTime:60
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:03:57,866 INFO [hmilyTransaction-hmily-transaction-self-recovery-52][LogUtil.java:87] - self recovery execute delayTime:60
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,023 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,023 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==> Parameters: COLLECTING(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,028 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,029 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Logic SQL: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,029 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=14, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=(1), alias=Optional.absent(), derivedAggregationSelectItems=[], index=-1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,029 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,029 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,029 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,030 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,045 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,048 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==> Parameters: COLLECTING(String), 0(Long), 10(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,083 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,083 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,084 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=3, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent())], groupByItems=[], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(CREATE_DATE), orderDirection=DESC, nullOrderDirection=ASC, index=-1, expression=null, alias=Optional.absent())], limit=Limit(offset=LimitValue(value=-1, index=1, boundOpened=false), rowCount=LimitValue(value=-1, index=2, boundOpened=false)), subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,084 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,084 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,085 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,085 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,101 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - <==      Total: 10
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,999 DEBUG [http-nio-53050-exec-5][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:01,999 DEBUG [http-nio-53050-exec-5][BaseJdbcLogger.java:159] - ==> Parameters: 15378791911(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,000 DEBUG [http-nio-53050-exec-5][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,096 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,097 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==> Parameters: COLLECTING(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,097 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,098 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Logic SQL: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,098 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=14, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=(1), alias=Optional.absent(), derivedAggregationSelectItems=[], index=1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,098 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,099 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,099 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,099 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,102 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,105 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==> Parameters: COLLECTING(String), 0(Long), 10(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,106 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,107 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,108 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=3, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent())], groupByItems=[], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(CREATE_DATE), orderDirection=DESC, nullOrderDirection=ASC, index=15, expression=null, alias=Optional.absent())], limit=Limit(offset=LimitValue(value=-1, index=1, boundOpened=false), rowCount=LimitValue(value=-1, index=2, boundOpened=false)), subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,108 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,108 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,109 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,110 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:02,119 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - <==      Total: 10
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,673 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE ID=? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,676 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,699 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,699 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Logic SQL: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE ID=?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,700 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE ID=?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=216, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,700 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project_1 WHERE ID=? ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,700 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project_1 WHERE ID=? ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,702 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,712 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE project SET REQUEST_NO=? WHERE ID = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,716 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - ==> Parameters: REQ_1FDFD7F82622430F8A85E193C5ED622A(String), 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,721 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,722 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Logic SQL: UPDATE project  SET REQUEST_NO=?  
 
 WHERE ID = ?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,722 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=1})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=2, logicSQL=UPDATE project  SET REQUEST_NO=?  
 
 WHERE ID = ?), deleteStatement=false, updateTableAlias={project=project}, updateColumnValues={Column(name=REQUEST_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5d8f2237}, whereStartIndex=38, whereStopIndex=49, whereParameterStartIndex=1, whereParameterEndIndex=1)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,722 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE project_1  SET REQUEST_NO=?  
 
 WHERE ID = ? ::: [REQ_1FDFD7F82622430F8A85E193C5ED622A, 1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,723 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE project_1  SET REQUEST_NO=?  
 
 WHERE ID = ? ::: [REQ_1FDFD7F82622430F8A85E193C5ED622A, 1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,724 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - <==    Updates: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,727 WARN [http-nio-53060-exec-8][DefaultConfig.java:95] - Could not load config for namespace micro_service.spring-cloud-feign from Apollo, please check whether the configs are released in Apollo! Return default value now!
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,756 INFO [hmilyTransaction-hmily-transaction-self-recovery-78][LogUtil.java:87] - self recovery execute delayTime:60
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,769 INFO [http-nio-53060-exec-8][ChainedDynamicProperty.java:115] - Flipping property: depository-agent-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,770 INFO [http-nio-53060-exec-8][ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-depository-agent-service
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,770 INFO [http-nio-53060-exec-8][BaseLoadBalancer.java:197] - Client: depository-agent-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=depository-agent-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,771 INFO [http-nio-53060-exec-8][DynamicServerListLoadBalancer.java:222] - Using serverListUpdater PollingServerListUpdater
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,773 INFO [http-nio-53060-exec-8][ChainedDynamicProperty.java:115] - Flipping property: depository-agent-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,773 INFO [http-nio-53060-exec-8][DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client depository-agent-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=depository-agent-service,current list of Servers=[192.168.137.1:53070],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.137.1:53070;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3982d263
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,849 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE project SET STATUS=?,MODIFY_DATE=? WHERE ID = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,852 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - ==> Parameters: 1(Integer), 2021-08-27 15:04:04.847(Timestamp), 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,855 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,855 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Logic SQL: UPDATE project  SET STATUS=?,MODIFY_DATE=?  
 
 WHERE ID = ?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,856 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=2})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=3, logicSQL=UPDATE project  SET STATUS=?,MODIFY_DATE=?  
 
 WHERE ID = ?), deleteStatement=false, updateTableAlias={project=project}, updateColumnValues={Column(name=STATUS, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5fa75ebf, Column(name=MODIFY_DATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@7b6c4e2c}, whereStartIndex=48, whereStopIndex=59, whereParameterStartIndex=2, whereParameterEndIndex=2)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,856 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE project_1  SET STATUS=?,MODIFY_DATE=?  
 
 WHERE ID = ? ::: [1, 2021-08-27T15:04:04.847+0800, 1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,857 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE project_1  SET STATUS=?,MODIFY_DATE=?  
 
 WHERE ID = ? ::: [1, 2021-08-27T15:04:04.847+0800, 1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,858 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - <==    Updates: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,882 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,883 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==> Parameters: COLLECTING(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,883 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,883 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Logic SQL: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,883 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=14, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=(1), alias=Optional.absent(), derivedAggregationSelectItems=[], index=1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,884 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,884 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,884 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,884 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,892 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,896 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==> Parameters: COLLECTING(String), 0(Long), 10(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,897 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,897 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,898 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=3, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent())], groupByItems=[], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(CREATE_DATE), orderDirection=DESC, nullOrderDirection=ASC, index=15, expression=null, alias=Optional.absent())], limit=Limit(offset=LimitValue(value=-1, index=1, boundOpened=false), rowCount=LimitValue(value=-1, index=2, boundOpened=false)), subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,899 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,899 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,900 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,901 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:04,907 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - <==      Total: 10
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:05,379 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:05,774 INFO [PollingServerListUpdater-1][ChainedDynamicProperty.java:115] - Flipping property: depository-agent-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:15,379 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:19,968 DEBUG [http-nio-53050-exec-4][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:19,969 DEBUG [http-nio-53050-exec-4][BaseJdbcLogger.java:159] - ==> Parameters: 18678544100(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:19,970 DEBUG [http-nio-53050-exec-4][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:25,380 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:34,153 DEBUG [http-nio-53050-exec-6][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:34,154 DEBUG [http-nio-53050-exec-6][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:34,154 ERROR [http-nio-53060-exec-2][GlobalExceptionHandler.java:45] - 【系统异常】{}
java.lang.NullPointerException
	at cn.itcast.wanxinp2p.transaction.service.ProjectServiceImpl.queryProjectsByQueryDTO(ProjectServiceImpl.java:142)
	at cn.itcast.wanxinp2p.transaction.service.ProjectServiceImpl$$FastClassBySpringCGLIB$$997f0e9f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.itcast.wanxinp2p.transaction.service.ProjectServiceImpl$$EnhancerBySpringCGLIB$$f092906e.queryProjectsByQueryDTO(<generated>)
	at cn.itcast.wanxinp2p.transaction.controller.TransactionController.queryProjects(TransactionController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:34,155 DEBUG [http-nio-53050-exec-6][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:35,272 DEBUG [http-nio-53050-exec-7][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:35,272 DEBUG [http-nio-53050-exec-7][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:35,273 DEBUG [http-nio-53050-exec-7][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:35,381 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,848 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE ID IN (?) 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,851 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,876 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,877 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE ID IN (?)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,877 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=IN, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE ID IN (?))), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,878 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE ID IN (?) ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,878 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE ID IN (?) ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,880 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,882 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,884 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,900 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,900 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Logic SQL: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,901 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=30, groupByLastIndex=0, items=[CommonSelectItem(expression=IFNULL(SUM(AMOUNT),0.0), alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,901 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_1 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,902 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_1 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,903 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - <==      Total: 2
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,907 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT( 1 ) FROM tender WHERE PROJECT_ID = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,909 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,913 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,913 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Logic SQL: SELECT COUNT( 1 ) FROM tender 
 
 WHERE PROJECT_ID = ?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,913 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT( 1 ) FROM tender 
 
 WHERE PROJECT_ID = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=16, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=( 1 ), alias=Optional.absent(), derivedAggregationSelectItems=[], index=-1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,913 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT( 1 ) FROM tender_1 
 
 WHERE PROJECT_ID = ? ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,914 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT( 1 ) FROM tender_1 
 
 WHERE PROJECT_ID = ? ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,915 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,933 DEBUG [http-nio-53050-exec-8][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE ID=? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,934 DEBUG [http-nio-53050-exec-8][BaseJdbcLogger.java:159] - ==> Parameters: 9(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:36,935 DEBUG [http-nio-53050-exec-8][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:41,384 DEBUG [http-nio-53050-exec-9][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:41,385 DEBUG [http-nio-53050-exec-9][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:41,386 DEBUG [http-nio-53050-exec-9][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,753 DEBUG [http-nio-53050-exec-10][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,753 DEBUG [http-nio-53050-exec-10][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,754 DEBUG [http-nio-53050-exec-10][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,767 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE ID=? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,769 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,770 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,771 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Logic SQL: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE ID=?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,771 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE ID=?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=216, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,772 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project_1 WHERE ID=? ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,772 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project_1 WHERE ID=? ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,773 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,778 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,780 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,780 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,780 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Logic SQL: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,781 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=30, groupByLastIndex=0, items=[CommonSelectItem(expression=IFNULL(SUM(AMOUNT),0.0), alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,781 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_1 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,781 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_1 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,782 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - <==      Total: 2
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,785 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==>  Preparing: INSERT INTO tender ( ID, CONSUMER_ID, CONSUMER_USERNAME, USER_NO, PROJECT_ID, PROJECT_NO, AMOUNT, TENDER_STATUS, CREATE_DATE, REQUEST_NO, STATUS, PROJECT_NAME, PROJECT_PERIOD, PROJECT_ANNUAL_RATE ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,788 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==> Parameters: 1431150665409318914(Long), 1010(Long), A5412FB30B604D319B8D0AD16CC6B272(String), USR_DAF43812CDB04CA998F1CB62A899F766(String), 1431150392267853825(Long), PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5(String), 1000(BigDecimal), FROZEN(String), 2021-08-27 15:04:42.784(Timestamp), REQ_3F43BCEFB8024F429D67E0C7FB70EF25(String), 0(Integer), 苏留先生第16次借款(String), 360(Integer), 0.10(BigDecimal)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,794 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,795 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Logic SQL: INSERT INTO tender  ( ID,
CONSUMER_ID,
CONSUMER_USERNAME,
USER_NO,
PROJECT_ID,
PROJECT_NO,
AMOUNT,
TENDER_STATUS,
CREATE_DATE,
REQUEST_NO,
STATUS,
PROJECT_NAME,
PROJECT_PERIOD,
PROJECT_ANNUAL_RATE )  VALUES  ( ?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
? )
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,796 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=CONSUMER_ID, tableName=tender), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=1}), Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=4})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=20)], parametersIndex=14, logicSQL=INSERT INTO tender  ( ID,
CONSUMER_ID,
CONSUMER_USERNAME,
USER_NO,
PROJECT_ID,
PROJECT_NO,
AMOUNT,
TENDER_STATUS,
CREATE_DATE,
REQUEST_NO,
STATUS,
PROJECT_NAME,
PROJECT_PERIOD,
PROJECT_ANNUAL_RATE )  VALUES  ( ?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
? )), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[ID, CONSUMER_ID, CONSUMER_USERNAME, USER_NO, PROJECT_ID, PROJECT_NO, AMOUNT, TENDER_STATUS, CREATE_DATE, REQUEST_NO, STATUS, PROJECT_NAME, PROJECT_PERIOD, PROJECT_ANNUAL_RATE], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@16ebfe03, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4cbb941b, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@37fbf38e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@62bbe118, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2b6900aa, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@3be25290, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@536da1e1, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@6ee339b5, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@dec0893, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2433ad6c, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a6f72a2, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@6d36decb, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@f3fb6e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@39927ed1])])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,796 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: INSERT INTO tender_1   (ID, CONSUMER_ID, CONSUMER_USERNAME, USER_NO, PROJECT_ID, PROJECT_NO, AMOUNT, TENDER_STATUS, CREATE_DATE, REQUEST_NO, STATUS, PROJECT_NAME, PROJECT_PERIOD, PROJECT_ANNUAL_RATE) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ::: [1431150665409318914, 1010, A5412FB30B604D319B8D0AD16CC6B272, USR_DAF43812CDB04CA998F1CB62A899F766, 1431150392267853825, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 1000, FROZEN, 2021-08-27T15:04:42.784+0800, REQ_3F43BCEFB8024F429D67E0C7FB70EF25, 0, 苏留先生第16次借款, 360, 0.10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,799 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - <==    Updates: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,863 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE tender SET CONSUMER_ID=?, CONSUMER_USERNAME=?, USER_NO=?, PROJECT_ID=?, PROJECT_NO=?, AMOUNT=?, TENDER_STATUS=?, CREATE_DATE=?, REQUEST_NO=?, STATUS=?, PROJECT_NAME=?, PROJECT_PERIOD=?, PROJECT_ANNUAL_RATE=? WHERE ID=? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,866 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==> Parameters: 1010(Long), A5412FB30B604D319B8D0AD16CC6B272(String), USR_DAF43812CDB04CA998F1CB62A899F766(String), 1431150392267853825(Long), PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5(String), 1000(BigDecimal), FROZEN(String), 2021-08-27 15:04:42.784(Timestamp), REQ_3F43BCEFB8024F429D67E0C7FB70EF25(String), 1(Integer), 苏留先生第16次借款(String), 360(Integer), 0.10(BigDecimal), 1431150665409318914(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,871 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,872 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Logic SQL: UPDATE tender  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,872 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=14, logicSQL=UPDATE tender  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=?), deleteStatement=false, updateTableAlias={tender=tender}, updateColumnValues={Column(name=CONSUMER_ID, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4ac534a9, Column(name=CONSUMER_USERNAME, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@51c3d0d7, Column(name=USER_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@37eb130b, Column(name=PROJECT_ID, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@697d0342, Column(name=PROJECT_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@a7e12b8, Column(name=AMOUNT, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@45f43e48, Column(name=TENDER_STATUS, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2ae81eb6, Column(name=CREATE_DATE, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2b0e7fba, Column(name=REQUEST_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@511f43b1, Column(name=STATUS, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@357d21a4, Column(name=PROJECT_NAME, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5f8a8413, Column(name=PROJECT_PERIOD, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@721d3f7, Column(name=PROJECT_ANNUAL_RATE, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2c081a69}, whereStartIndex=217, whereStopIndex=226, whereParameterStartIndex=13, whereParameterEndIndex=13)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,873 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE tender_0  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1010, A5412FB30B604D319B8D0AD16CC6B272, USR_DAF43812CDB04CA998F1CB62A899F766, 1431150392267853825, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 1000, FROZEN, 2021-08-27T15:04:42.784+0800, REQ_3F43BCEFB8024F429D67E0C7FB70EF25, 1, 苏留先生第16次借款, 360, 0.10, 1431150665409318914]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,873 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE tender_1  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1010, A5412FB30B604D319B8D0AD16CC6B272, USR_DAF43812CDB04CA998F1CB62A899F766, 1431150392267853825, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 1000, FROZEN, 2021-08-27T15:04:42.784+0800, REQ_3F43BCEFB8024F429D67E0C7FB70EF25, 1, 苏留先生第16次借款, 360, 0.10, 1431150665409318914]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,873 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE tender_0  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1010, A5412FB30B604D319B8D0AD16CC6B272, USR_DAF43812CDB04CA998F1CB62A899F766, 1431150392267853825, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 1000, FROZEN, 2021-08-27T15:04:42.784+0800, REQ_3F43BCEFB8024F429D67E0C7FB70EF25, 1, 苏留先生第16次借款, 360, 0.10, 1431150665409318914]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,873 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE tender_1  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1010, A5412FB30B604D319B8D0AD16CC6B272, USR_DAF43812CDB04CA998F1CB62A899F766, 1431150392267853825, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 1000, FROZEN, 2021-08-27T15:04:42.784+0800, REQ_3F43BCEFB8024F429D67E0C7FB70EF25, 1, 苏留先生第16次借款, 360, 0.10, 1431150665409318914]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,875 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - <==    Updates: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,877 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,879 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,879 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,880 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Logic SQL: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,880 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=30, groupByLastIndex=0, items=[CommonSelectItem(expression=IFNULL(SUM(AMOUNT),0.0), alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,880 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_1 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,880 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_1 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:42,881 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - <==      Total: 2
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:43,887 DEBUG [http-nio-53050-exec-2][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:43,888 DEBUG [http-nio-53050-exec-2][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:43,889 DEBUG [http-nio-53050-exec-2][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,917 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE ID IN (?) 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,920 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,921 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,921 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE ID IN (?)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,922 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=IN, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE ID IN (?))), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,922 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE ID IN (?) ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,922 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE ID IN (?) ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,924 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,926 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,930 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,930 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,931 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Logic SQL: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,931 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=30, groupByLastIndex=0, items=[CommonSelectItem(expression=IFNULL(SUM(AMOUNT),0.0), alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,931 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_1 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,931 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_1 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,932 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - <==      Total: 2
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,934 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT( 1 ) FROM tender WHERE PROJECT_ID = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,936 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,936 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,936 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Logic SQL: SELECT COUNT( 1 ) FROM tender 
 
 WHERE PROJECT_ID = ?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,937 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT( 1 ) FROM tender 
 
 WHERE PROJECT_ID = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=16, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=( 1 ), alias=Optional.absent(), derivedAggregationSelectItems=[], index=1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,937 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT( 1 ) FROM tender_1 
 
 WHERE PROJECT_ID = ? ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,937 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT( 1 ) FROM tender_1 
 
 WHERE PROJECT_ID = ? ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,938 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,949 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE ID=? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,949 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - ==> Parameters: 9(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:44,950 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:45,382 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:48,174 DEBUG [http-nio-53050-exec-5][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:48,174 DEBUG [http-nio-53050-exec-5][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:48,175 DEBUG [http-nio-53050-exec-5][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,871 DEBUG [http-nio-53050-exec-6][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,871 DEBUG [http-nio-53050-exec-6][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,872 DEBUG [http-nio-53050-exec-6][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,883 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE ID=? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,885 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,887 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,887 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Logic SQL: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE ID=?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,887 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE ID=?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=216, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,888 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project_1 WHERE ID=? ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,888 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project_1 WHERE ID=? ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,890 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,892 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,894 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,895 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,895 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Logic SQL: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,895 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=30, groupByLastIndex=0, items=[CommonSelectItem(expression=IFNULL(SUM(AMOUNT),0.0), alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,895 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_1 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,896 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_1 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,897 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - <==      Total: 2
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,898 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==>  Preparing: INSERT INTO tender ( ID, CONSUMER_ID, CONSUMER_USERNAME, USER_NO, PROJECT_ID, PROJECT_NO, AMOUNT, TENDER_STATUS, CREATE_DATE, REQUEST_NO, STATUS, PROJECT_NAME, PROJECT_PERIOD, PROJECT_ANNUAL_RATE ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,900 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==> Parameters: 1431150695243403266(Long), 1010(Long), A5412FB30B604D319B8D0AD16CC6B272(String), USR_DAF43812CDB04CA998F1CB62A899F766(String), 1431150392267853825(Long), PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5(String), 1000(BigDecimal), FROZEN(String), 2021-08-27 15:04:49.898(Timestamp), REQ_CFBEFD5E8BC34F2AB82E4835F632B548(String), 0(Integer), 苏留先生第16次借款(String), 360(Integer), 0.10(BigDecimal)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,901 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,901 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Logic SQL: INSERT INTO tender  ( ID,
CONSUMER_ID,
CONSUMER_USERNAME,
USER_NO,
PROJECT_ID,
PROJECT_NO,
AMOUNT,
TENDER_STATUS,
CREATE_DATE,
REQUEST_NO,
STATUS,
PROJECT_NAME,
PROJECT_PERIOD,
PROJECT_ANNUAL_RATE )  VALUES  ( ?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
? )
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,901 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=CONSUMER_ID, tableName=tender), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=1}), Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=4})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=20)], parametersIndex=14, logicSQL=INSERT INTO tender  ( ID,
CONSUMER_ID,
CONSUMER_USERNAME,
USER_NO,
PROJECT_ID,
PROJECT_NO,
AMOUNT,
TENDER_STATUS,
CREATE_DATE,
REQUEST_NO,
STATUS,
PROJECT_NAME,
PROJECT_PERIOD,
PROJECT_ANNUAL_RATE )  VALUES  ( ?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
? )), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[ID, CONSUMER_ID, CONSUMER_USERNAME, USER_NO, PROJECT_ID, PROJECT_NO, AMOUNT, TENDER_STATUS, CREATE_DATE, REQUEST_NO, STATUS, PROJECT_NAME, PROJECT_PERIOD, PROJECT_ANNUAL_RATE], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@16ebfe03, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4cbb941b, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@37fbf38e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@62bbe118, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2b6900aa, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@3be25290, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@536da1e1, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@6ee339b5, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@dec0893, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2433ad6c, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a6f72a2, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@6d36decb, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@f3fb6e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@39927ed1])])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,901 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: INSERT INTO tender_1   (ID, CONSUMER_ID, CONSUMER_USERNAME, USER_NO, PROJECT_ID, PROJECT_NO, AMOUNT, TENDER_STATUS, CREATE_DATE, REQUEST_NO, STATUS, PROJECT_NAME, PROJECT_PERIOD, PROJECT_ANNUAL_RATE) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ::: [1431150695243403266, 1010, A5412FB30B604D319B8D0AD16CC6B272, USR_DAF43812CDB04CA998F1CB62A899F766, 1431150392267853825, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 1000, FROZEN, 2021-08-27T15:04:49.898+0800, REQ_CFBEFD5E8BC34F2AB82E4835F632B548, 0, 苏留先生第16次借款, 360, 0.10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:49,993 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - <==    Updates: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,072 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE tender SET CONSUMER_ID=?, CONSUMER_USERNAME=?, USER_NO=?, PROJECT_ID=?, PROJECT_NO=?, AMOUNT=?, TENDER_STATUS=?, CREATE_DATE=?, REQUEST_NO=?, STATUS=?, PROJECT_NAME=?, PROJECT_PERIOD=?, PROJECT_ANNUAL_RATE=? WHERE ID=? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,074 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==> Parameters: 1010(Long), A5412FB30B604D319B8D0AD16CC6B272(String), USR_DAF43812CDB04CA998F1CB62A899F766(String), 1431150392267853825(Long), PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5(String), 1000(BigDecimal), FROZEN(String), 2021-08-27 15:04:49.898(Timestamp), REQ_CFBEFD5E8BC34F2AB82E4835F632B548(String), 1(Integer), 苏留先生第16次借款(String), 360(Integer), 0.10(BigDecimal), 1431150695243403266(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,075 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,075 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Logic SQL: UPDATE tender  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,075 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=14, logicSQL=UPDATE tender  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=?), deleteStatement=false, updateTableAlias={tender=tender}, updateColumnValues={Column(name=CONSUMER_ID, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4ac534a9, Column(name=CONSUMER_USERNAME, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@51c3d0d7, Column(name=USER_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@37eb130b, Column(name=PROJECT_ID, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@697d0342, Column(name=PROJECT_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@a7e12b8, Column(name=AMOUNT, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@45f43e48, Column(name=TENDER_STATUS, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2ae81eb6, Column(name=CREATE_DATE, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2b0e7fba, Column(name=REQUEST_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@511f43b1, Column(name=STATUS, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@357d21a4, Column(name=PROJECT_NAME, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5f8a8413, Column(name=PROJECT_PERIOD, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@721d3f7, Column(name=PROJECT_ANNUAL_RATE, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2c081a69}, whereStartIndex=217, whereStopIndex=226, whereParameterStartIndex=13, whereParameterEndIndex=13)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,076 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE tender_0  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1010, A5412FB30B604D319B8D0AD16CC6B272, USR_DAF43812CDB04CA998F1CB62A899F766, 1431150392267853825, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 1000, FROZEN, 2021-08-27T15:04:49.898+0800, REQ_CFBEFD5E8BC34F2AB82E4835F632B548, 1, 苏留先生第16次借款, 360, 0.10, 1431150695243403266]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,076 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE tender_1  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1010, A5412FB30B604D319B8D0AD16CC6B272, USR_DAF43812CDB04CA998F1CB62A899F766, 1431150392267853825, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 1000, FROZEN, 2021-08-27T15:04:49.898+0800, REQ_CFBEFD5E8BC34F2AB82E4835F632B548, 1, 苏留先生第16次借款, 360, 0.10, 1431150695243403266]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,076 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE tender_0  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1010, A5412FB30B604D319B8D0AD16CC6B272, USR_DAF43812CDB04CA998F1CB62A899F766, 1431150392267853825, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 1000, FROZEN, 2021-08-27T15:04:49.898+0800, REQ_CFBEFD5E8BC34F2AB82E4835F632B548, 1, 苏留先生第16次借款, 360, 0.10, 1431150695243403266]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,076 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE tender_1  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1010, A5412FB30B604D319B8D0AD16CC6B272, USR_DAF43812CDB04CA998F1CB62A899F766, 1431150392267853825, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 1000, FROZEN, 2021-08-27T15:04:49.898+0800, REQ_CFBEFD5E8BC34F2AB82E4835F632B548, 1, 苏留先生第16次借款, 360, 0.10, 1431150695243403266]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,078 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - <==    Updates: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,079 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,081 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,081 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,082 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Logic SQL: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,082 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=30, groupByLastIndex=0, items=[CommonSelectItem(expression=IFNULL(SUM(AMOUNT),0.0), alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,082 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_1 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,082 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_1 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,083 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - <==      Total: 2
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,090 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE project SET CONSUMER_ID=?, USER_NO=?, PROJECT_NO=?, NAME=?, DESCRIPTION=?, TYPE=?, PERIOD=?, ANNUAL_RATE=?, BORROWER_ANNUAL_RATE=?, COMMISSION_ANNUAL_RATE=?, REPAYMENT_WAY=?, AMOUNT=?, PROJECT_STATUS=?, CREATE_DATE=?, MODIFY_DATE=?, STATUS=?, IS_ASSIGNMENT=?, REQUEST_NO=? WHERE ID=? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,093 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==> Parameters: 9(Long), USR_F720319F5AE24FDDBE12685AEEDFCB61(String), PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5(String), 苏留先生第16次借款(String), 个人生活消费(String), NEW(String), 360(Integer), 0.10(BigDecimal), 0.15(BigDecimal), 0.05(BigDecimal), FIXED_REPAYMENT(String), 2000.00(BigDecimal), FULLY(String), 2021-08-27 15:03:16.0(Timestamp), 2021-08-27 15:04:05.0(Timestamp), 1(Integer), 0(Integer), REQ_1FDFD7F82622430F8A85E193C5ED622A(String), 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,099 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,099 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Logic SQL: UPDATE project  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
MODIFY_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?  WHERE ID=?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,100 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=18})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=19, logicSQL=UPDATE project  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
MODIFY_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?  WHERE ID=?), deleteStatement=false, updateTableAlias={project=project}, updateColumnValues={Column(name=CONSUMER_ID, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@8801f94, Column(name=USER_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@704ebf38, Column(name=PROJECT_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2f52ea3b, Column(name=NAME, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e1db5a8, Column(name=DESCRIPTION, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@16e96540, Column(name=TYPE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@135bafda, Column(name=PERIOD, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2be09cb8, Column(name=ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5823cc99, Column(name=BORROWER_ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5bd71b8, Column(name=COMMISSION_ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4b563baa, Column(name=REPAYMENT_WAY, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@64fc6b24, Column(name=AMOUNT, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@227d3426, Column(name=PROJECT_STATUS, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4c23b160, Column(name=CREATE_DATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@36525825, Column(name=MODIFY_DATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@31f0a080, Column(name=STATUS, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@7ae76e9c, Column(name=IS_ASSIGNMENT, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2b1e7811, Column(name=REQUEST_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@fa99e27}, whereStartIndex=282, whereStopIndex=291, whereParameterStartIndex=18, whereParameterEndIndex=18)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,100 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE project_1  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
MODIFY_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?  WHERE ID=? ::: [9, USR_F720319F5AE24FDDBE12685AEEDFCB61, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 苏留先生第16次借款, 个人生活消费, NEW, 360, 0.10, 0.15, 0.05, FIXED_REPAYMENT, 2000.00, FULLY, 2021-08-27T15:03:16.000+0800, 2021-08-27T15:04:05.000+0800, 1, 0, REQ_1FDFD7F82622430F8A85E193C5ED622A, 1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,100 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE project_1  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
MODIFY_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?  WHERE ID=? ::: [9, USR_F720319F5AE24FDDBE12685AEEDFCB61, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 苏留先生第16次借款, 个人生活消费, NEW, 360, 0.10, 0.15, 0.05, FIXED_REPAYMENT, 2000.00, FULLY, 2021-08-27T15:03:16.000+0800, 2021-08-27T15:04:05.000+0800, 1, 0, REQ_1FDFD7F82622430F8A85E193C5ED622A, 1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:50,102 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - <==    Updates: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:51,034 DEBUG [http-nio-53050-exec-8][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:51,034 DEBUG [http-nio-53050-exec-8][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:51,036 DEBUG [http-nio-53050-exec-8][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:52,888 ERROR [http-nio-53060-exec-8][GlobalExceptionHandler.java:45] - 【系统异常】{}
java.lang.NullPointerException
	at cn.itcast.wanxinp2p.transaction.service.ProjectServiceImpl.queryProjectsByQueryDTO(ProjectServiceImpl.java:142)
	at cn.itcast.wanxinp2p.transaction.service.ProjectServiceImpl$$FastClassBySpringCGLIB$$997f0e9f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.itcast.wanxinp2p.transaction.service.ProjectServiceImpl$$EnhancerBySpringCGLIB$$f092906e.queryProjectsByQueryDTO(<generated>)
	at cn.itcast.wanxinp2p.transaction.controller.TransactionController.queryProjects(TransactionController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:53,448 DEBUG [http-nio-53050-exec-9][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:53,448 DEBUG [http-nio-53050-exec-9][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:53,449 DEBUG [http-nio-53050-exec-9][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,605 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE ID IN (?) 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,608 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,608 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,608 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE ID IN (?)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,608 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=IN, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE ID IN (?))), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,608 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE ID IN (?) ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,609 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE ID IN (?) ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,614 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,616 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,619 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,620 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,620 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Logic SQL: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,620 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=30, groupByLastIndex=0, items=[CommonSelectItem(expression=IFNULL(SUM(AMOUNT),0.0), alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,620 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_1 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,621 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_1 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,622 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - <==      Total: 2
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,625 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT( 1 ) FROM tender WHERE PROJECT_ID = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,628 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,628 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,629 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Logic SQL: SELECT COUNT( 1 ) FROM tender 
 
 WHERE PROJECT_ID = ?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,629 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT( 1 ) FROM tender 
 
 WHERE PROJECT_ID = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=16, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=( 1 ), alias=Optional.absent(), derivedAggregationSelectItems=[], index=1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,630 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT( 1 ) FROM tender_1 
 
 WHERE PROJECT_ID = ? ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,630 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT( 1 ) FROM tender_1 
 
 WHERE PROJECT_ID = ? ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,631 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,643 DEBUG [http-nio-53050-exec-10][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE ID=? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,643 DEBUG [http-nio-53050-exec-10][BaseJdbcLogger.java:159] - ==> Parameters: 9(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:54,643 DEBUG [http-nio-53050-exec-10][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:55,382 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:57,705 INFO [hmilyTransaction-hmily-transaction-self-recovery-26][LogUtil.java:87] - self recovery execute delayTime:60
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:57,726 DEBUG [http-nio-53050-exec-2][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:57,726 DEBUG [http-nio-53050-exec-2][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:57,727 DEBUG [http-nio-53050-exec-2][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:57,869 INFO [hmilyTransaction-hmily-transaction-self-recovery-52][LogUtil.java:87] - self recovery execute delayTime:60
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:58,456 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:58,456 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:04:58,458 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:00,471 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: content-search-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:01,352 DEBUG [http-nio-53050-exec-5][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:01,353 DEBUG [http-nio-53050-exec-5][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:01,354 DEBUG [http-nio-53050-exec-5][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:01,475 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: content-search-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/content-search-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.137.1&messages=%7B%22details%22%3A%7B%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: content-search-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:04,759 INFO [hmilyTransaction-hmily-transaction-self-recovery-78][LogUtil.java:87] - self recovery execute delayTime:60
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:05,382 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:05,684 DEBUG [http-nio-53050-exec-4][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:05,685 DEBUG [http-nio-53050-exec-4][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:05,686 DEBUG [http-nio-53050-exec-4][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:08,213 DEBUG [http-nio-53050-exec-6][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:08,213 DEBUG [http-nio-53050-exec-6][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:08,214 DEBUG [http-nio-53050-exec-6][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:10,486 DEBUG [http-nio-53050-exec-7][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:10,487 DEBUG [http-nio-53050-exec-7][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:10,488 DEBUG [http-nio-53050-exec-7][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:11,678 DEBUG [http-nio-53050-exec-8][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:11,678 DEBUG [http-nio-53050-exec-8][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:11,679 DEBUG [http-nio-53050-exec-8][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:12,205 ERROR [http-nio-53060-exec-1][GlobalExceptionHandler.java:45] - 【系统异常】{}
java.lang.NullPointerException
	at cn.itcast.wanxinp2p.transaction.service.ProjectServiceImpl.queryProjectsByQueryDTO(ProjectServiceImpl.java:142)
	at cn.itcast.wanxinp2p.transaction.service.ProjectServiceImpl$$FastClassBySpringCGLIB$$997f0e9f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.itcast.wanxinp2p.transaction.service.ProjectServiceImpl$$EnhancerBySpringCGLIB$$f092906e.queryProjectsByQueryDTO(<generated>)
	at cn.itcast.wanxinp2p.transaction.controller.TransactionController.queryProjects(TransactionController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:15,180 DEBUG [http-nio-53050-exec-9][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:15,181 DEBUG [http-nio-53050-exec-9][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:15,182 DEBUG [http-nio-53050-exec-9][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:15,383 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,574 DEBUG [http-nio-53060-exec-4][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE ID IN (?) 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,576 DEBUG [http-nio-53060-exec-4][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,577 INFO [http-nio-53060-exec-4][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,577 INFO [http-nio-53060-exec-4][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE ID IN (?)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,577 INFO [http-nio-53060-exec-4][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=IN, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE ID IN (?))), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,577 INFO [http-nio-53060-exec-4][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE ID IN (?) ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,578 INFO [http-nio-53060-exec-4][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE ID IN (?) ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,580 DEBUG [http-nio-53060-exec-4][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,583 DEBUG [http-nio-53060-exec-4][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,585 DEBUG [http-nio-53060-exec-4][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,587 INFO [http-nio-53060-exec-4][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,587 INFO [http-nio-53060-exec-4][SQLLogger.java:89] - Logic SQL: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,587 INFO [http-nio-53060-exec-4][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=30, groupByLastIndex=0, items=[CommonSelectItem(expression=IFNULL(SUM(AMOUNT),0.0), alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,588 INFO [http-nio-53060-exec-4][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_1 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,588 INFO [http-nio-53060-exec-4][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_1 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,589 DEBUG [http-nio-53060-exec-4][BaseJdbcLogger.java:159] - <==      Total: 2
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,591 DEBUG [http-nio-53060-exec-4][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT( 1 ) FROM tender WHERE PROJECT_ID = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,594 DEBUG [http-nio-53060-exec-4][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,594 INFO [http-nio-53060-exec-4][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,594 INFO [http-nio-53060-exec-4][SQLLogger.java:89] - Logic SQL: SELECT COUNT( 1 ) FROM tender 
 
 WHERE PROJECT_ID = ?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,595 INFO [http-nio-53060-exec-4][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT( 1 ) FROM tender 
 
 WHERE PROJECT_ID = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=16, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=( 1 ), alias=Optional.absent(), derivedAggregationSelectItems=[], index=1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,595 INFO [http-nio-53060-exec-4][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT( 1 ) FROM tender_1 
 
 WHERE PROJECT_ID = ? ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,595 INFO [http-nio-53060-exec-4][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT( 1 ) FROM tender_1 
 
 WHERE PROJECT_ID = ? ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,596 DEBUG [http-nio-53060-exec-4][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,612 DEBUG [http-nio-53050-exec-10][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE ID=? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,613 DEBUG [http-nio-53050-exec-10][BaseJdbcLogger.java:159] - ==> Parameters: 9(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:16,614 DEBUG [http-nio-53050-exec-10][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:18,968 DEBUG [http-nio-53050-exec-1][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:18,969 DEBUG [http-nio-53050-exec-1][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:18,969 DEBUG [http-nio-53050-exec-1][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:19,684 DEBUG [http-nio-53050-exec-2][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:19,685 DEBUG [http-nio-53050-exec-2][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:19,687 DEBUG [http-nio-53050-exec-2][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:21,010 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:21,010 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - ==> Parameters: 15020227746(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:21,011 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:23,937 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:25,384 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:35,385 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,648 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,648 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==> Parameters: FULLY(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,649 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,649 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Logic SQL: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,650 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=14, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=(1), alias=Optional.absent(), derivedAggregationSelectItems=[], index=1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,650 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [FULLY]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,650 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [FULLY]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,650 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [FULLY]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,651 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [FULLY]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,653 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,656 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==> Parameters: FULLY(String), 0(Long), 10(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,656 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,657 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,657 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=3, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent())], groupByItems=[], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(CREATE_DATE), orderDirection=DESC, nullOrderDirection=ASC, index=15, expression=null, alias=Optional.absent())], limit=Limit(offset=LimitValue(value=-1, index=1, boundOpened=false), rowCount=LimitValue(value=-1, index=2, boundOpened=false)), subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,657 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,657 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,657 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,657 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:44,660 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - <==      Total: 6
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:45,385 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 0ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,066 DEBUG [http-nio-53050-exec-4][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE mobile = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,067 DEBUG [http-nio-53050-exec-4][BaseJdbcLogger.java:159] - ==> Parameters: 15378791911(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,068 DEBUG [http-nio-53050-exec-4][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,206 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,207 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==> Parameters: FULLY(String)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,207 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,207 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Logic SQL: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,208 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=14, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=(1), alias=Optional.absent(), derivedAggregationSelectItems=[], index=1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,208 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [FULLY]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,208 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [FULLY]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,209 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [FULLY]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,209 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [FULLY]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,214 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,219 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==> Parameters: FULLY(String), 0(Long), 10(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,220 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,221 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,221 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=3, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent())], groupByItems=[], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(CREATE_DATE), orderDirection=DESC, nullOrderDirection=ASC, index=15, expression=null, alias=Optional.absent())], limit=Limit(offset=LimitValue(value=-1, index=1, boundOpened=false), rowCount=LimitValue(value=-1, index=2, boundOpened=false)), subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,222 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,222 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,223 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,223 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:46,227 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - <==      Total: 6
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,750 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE ID=? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,752 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,752 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,752 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Logic SQL: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE ID=?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,752 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE ID=?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=216, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,753 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project_1 WHERE ID=? ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,753 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,MODIFY_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project_1 WHERE ID=? ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,754 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - <==      Total: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,757 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE FROM tender WHERE PROJECT_ID = ? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,759 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==> Parameters: 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,774 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,774 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender 
 
 WHERE PROJECT_ID = ?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,774 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender 
 
 WHERE PROJECT_ID = ?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=168, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_USERNAME, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_ID, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=TENDER_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NAME, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_PERIOD, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_ANNUAL_RATE, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,774 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender_1 
 
 WHERE PROJECT_ID = ? ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,775 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender_1 
 
 WHERE PROJECT_ID = ? ::: [1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,776 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - <==      Total: 2
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,919 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE tender SET CONSUMER_ID=?, CONSUMER_USERNAME=?, USER_NO=?, PROJECT_ID=?, PROJECT_NO=?, AMOUNT=?, TENDER_STATUS=?, CREATE_DATE=?, REQUEST_NO=?, STATUS=?, PROJECT_NAME=?, PROJECT_PERIOD=?, PROJECT_ANNUAL_RATE=? WHERE ID=? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,921 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==> Parameters: 1010(Long), A5412FB30B604D319B8D0AD16CC6B272(String), USR_DAF43812CDB04CA998F1CB62A899F766(String), 1431150392267853825(Long), PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5(String), 1000(BigDecimal), LOAN(String), 2021-08-27 15:04:43.0(Timestamp), REQ_3F43BCEFB8024F429D67E0C7FB70EF25(String), 1(Integer), 苏留先生第16次借款(String), 360(Integer), 0.10(BigDecimal), 1431150665409318914(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,921 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,921 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Logic SQL: UPDATE tender  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,922 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=14, logicSQL=UPDATE tender  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=?), deleteStatement=false, updateTableAlias={tender=tender}, updateColumnValues={Column(name=CONSUMER_ID, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4ac534a9, Column(name=CONSUMER_USERNAME, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@51c3d0d7, Column(name=USER_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@37eb130b, Column(name=PROJECT_ID, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@697d0342, Column(name=PROJECT_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@a7e12b8, Column(name=AMOUNT, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@45f43e48, Column(name=TENDER_STATUS, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2ae81eb6, Column(name=CREATE_DATE, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2b0e7fba, Column(name=REQUEST_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@511f43b1, Column(name=STATUS, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@357d21a4, Column(name=PROJECT_NAME, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5f8a8413, Column(name=PROJECT_PERIOD, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@721d3f7, Column(name=PROJECT_ANNUAL_RATE, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2c081a69}, whereStartIndex=217, whereStopIndex=226, whereParameterStartIndex=13, whereParameterEndIndex=13)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,922 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE tender_0  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1010, A5412FB30B604D319B8D0AD16CC6B272, USR_DAF43812CDB04CA998F1CB62A899F766, 1431150392267853825, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 1000, LOAN, 2021-08-27T15:04:43.000+0800, REQ_3F43BCEFB8024F429D67E0C7FB70EF25, 1, 苏留先生第16次借款, 360, 0.10, 1431150665409318914]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,922 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE tender_1  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1010, A5412FB30B604D319B8D0AD16CC6B272, USR_DAF43812CDB04CA998F1CB62A899F766, 1431150392267853825, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 1000, LOAN, 2021-08-27T15:04:43.000+0800, REQ_3F43BCEFB8024F429D67E0C7FB70EF25, 1, 苏留先生第16次借款, 360, 0.10, 1431150665409318914]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,922 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE tender_0  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1010, A5412FB30B604D319B8D0AD16CC6B272, USR_DAF43812CDB04CA998F1CB62A899F766, 1431150392267853825, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 1000, LOAN, 2021-08-27T15:04:43.000+0800, REQ_3F43BCEFB8024F429D67E0C7FB70EF25, 1, 苏留先生第16次借款, 360, 0.10, 1431150665409318914]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,922 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE tender_1  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1010, A5412FB30B604D319B8D0AD16CC6B272, USR_DAF43812CDB04CA998F1CB62A899F766, 1431150392267853825, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 1000, LOAN, 2021-08-27T15:04:43.000+0800, REQ_3F43BCEFB8024F429D67E0C7FB70EF25, 1, 苏留先生第16次借款, 360, 0.10, 1431150665409318914]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,924 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - <==    Updates: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,926 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE tender SET CONSUMER_ID=?, CONSUMER_USERNAME=?, USER_NO=?, PROJECT_ID=?, PROJECT_NO=?, AMOUNT=?, TENDER_STATUS=?, CREATE_DATE=?, REQUEST_NO=?, STATUS=?, PROJECT_NAME=?, PROJECT_PERIOD=?, PROJECT_ANNUAL_RATE=? WHERE ID=? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,928 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==> Parameters: 1010(Long), A5412FB30B604D319B8D0AD16CC6B272(String), USR_DAF43812CDB04CA998F1CB62A899F766(String), 1431150392267853825(Long), PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5(String), 1000(BigDecimal), LOAN(String), 2021-08-27 15:04:50.0(Timestamp), REQ_CFBEFD5E8BC34F2AB82E4835F632B548(String), 1(Integer), 苏留先生第16次借款(String), 360(Integer), 0.10(BigDecimal), 1431150695243403266(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,928 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,928 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Logic SQL: UPDATE tender  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,928 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=14, logicSQL=UPDATE tender  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=?), deleteStatement=false, updateTableAlias={tender=tender}, updateColumnValues={Column(name=CONSUMER_ID, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4ac534a9, Column(name=CONSUMER_USERNAME, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@51c3d0d7, Column(name=USER_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@37eb130b, Column(name=PROJECT_ID, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@697d0342, Column(name=PROJECT_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@a7e12b8, Column(name=AMOUNT, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@45f43e48, Column(name=TENDER_STATUS, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2ae81eb6, Column(name=CREATE_DATE, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2b0e7fba, Column(name=REQUEST_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@511f43b1, Column(name=STATUS, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@357d21a4, Column(name=PROJECT_NAME, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5f8a8413, Column(name=PROJECT_PERIOD, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@721d3f7, Column(name=PROJECT_ANNUAL_RATE, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2c081a69}, whereStartIndex=217, whereStopIndex=226, whereParameterStartIndex=13, whereParameterEndIndex=13)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,929 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE tender_0  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1010, A5412FB30B604D319B8D0AD16CC6B272, USR_DAF43812CDB04CA998F1CB62A899F766, 1431150392267853825, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 1000, LOAN, 2021-08-27T15:04:50.000+0800, REQ_CFBEFD5E8BC34F2AB82E4835F632B548, 1, 苏留先生第16次借款, 360, 0.10, 1431150695243403266]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,929 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE tender_1  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1010, A5412FB30B604D319B8D0AD16CC6B272, USR_DAF43812CDB04CA998F1CB62A899F766, 1431150392267853825, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 1000, LOAN, 2021-08-27T15:04:50.000+0800, REQ_CFBEFD5E8BC34F2AB82E4835F632B548, 1, 苏留先生第16次借款, 360, 0.10, 1431150695243403266]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,929 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE tender_0  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1010, A5412FB30B604D319B8D0AD16CC6B272, USR_DAF43812CDB04CA998F1CB62A899F766, 1431150392267853825, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 1000, LOAN, 2021-08-27T15:04:50.000+0800, REQ_CFBEFD5E8BC34F2AB82E4835F632B548, 1, 苏留先生第16次借款, 360, 0.10, 1431150695243403266]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,929 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE tender_1  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,
PROJECT_NAME=?,
PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1010, A5412FB30B604D319B8D0AD16CC6B272, USR_DAF43812CDB04CA998F1CB62A899F766, 1431150392267853825, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 1000, LOAN, 2021-08-27T15:04:50.000+0800, REQ_CFBEFD5E8BC34F2AB82E4835F632B548, 1, 苏留先生第16次借款, 360, 0.10, 1431150695243403266]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:48,931 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - <==    Updates: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:50,486 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: application
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:51,623 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: uaa-service, cluster: DEFAULT, namespace: application, url: http://192.168.85.131:8080/configs/uaa-service/DEFAULT/application?ip=192.168.137.1&messages=%7B%22details%22%3A%7B%22uaa-service%2Bdefault%2Bapplication%22%3A308%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: uaa-service, cluster: DEFAULT, namespace: application, please check whether the configs are released in Apollo!]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:55,036 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE project SET CONSUMER_ID=?, USER_NO=?, PROJECT_NO=?, NAME=?, DESCRIPTION=?, TYPE=?, PERIOD=?, ANNUAL_RATE=?, BORROWER_ANNUAL_RATE=?, COMMISSION_ANNUAL_RATE=?, REPAYMENT_WAY=?, AMOUNT=?, PROJECT_STATUS=?, CREATE_DATE=?, MODIFY_DATE=?, STATUS=?, IS_ASSIGNMENT=?, REQUEST_NO=? WHERE ID=? 
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:55,041 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==> Parameters: 9(Long), USR_F720319F5AE24FDDBE12685AEEDFCB61(String), PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5(String), 苏留先生第16次借款(String), 个人生活消费(String), NEW(String), 360(Integer), 0.10(BigDecimal), 0.15(BigDecimal), 0.05(BigDecimal), FIXED_REPAYMENT(String), 2000.00(BigDecimal), REPAYING(String), 2021-08-27 15:03:16.0(Timestamp), 2021-08-27 15:04:05.0(Timestamp), 1(Integer), 0(Integer), REQ_1FDFD7F82622430F8A85E193C5ED622A(String), 1431150392267853825(Long)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:55,042 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Rule Type: sharding
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:55,042 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Logic SQL: UPDATE project  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
MODIFY_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?  WHERE ID=?
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:55,042 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=18})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=19, logicSQL=UPDATE project  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
MODIFY_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?  WHERE ID=?), deleteStatement=false, updateTableAlias={project=project}, updateColumnValues={Column(name=CONSUMER_ID, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@8801f94, Column(name=USER_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@704ebf38, Column(name=PROJECT_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2f52ea3b, Column(name=NAME, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1e1db5a8, Column(name=DESCRIPTION, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@16e96540, Column(name=TYPE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@135bafda, Column(name=PERIOD, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2be09cb8, Column(name=ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5823cc99, Column(name=BORROWER_ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5bd71b8, Column(name=COMMISSION_ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4b563baa, Column(name=REPAYMENT_WAY, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@64fc6b24, Column(name=AMOUNT, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@227d3426, Column(name=PROJECT_STATUS, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4c23b160, Column(name=CREATE_DATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@36525825, Column(name=MODIFY_DATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@31f0a080, Column(name=STATUS, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@7ae76e9c, Column(name=IS_ASSIGNMENT, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2b1e7811, Column(name=REQUEST_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@fa99e27}, whereStartIndex=282, whereStopIndex=291, whereParameterStartIndex=18, whereParameterEndIndex=18)
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:55,043 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE project_1  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
MODIFY_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?  WHERE ID=? ::: [9, USR_F720319F5AE24FDDBE12685AEEDFCB61, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 苏留先生第16次借款, 个人生活消费, NEW, 360, 0.10, 0.15, 0.05, FIXED_REPAYMENT, 2000.00, REPAYING, 2021-08-27T15:03:16.000+0800, 2021-08-27T15:04:05.000+0800, 1, 0, REQ_1FDFD7F82622430F8A85E193C5ED622A, 1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:55,043 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE project_1  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
MODIFY_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?  WHERE ID=? ::: [9, USR_F720319F5AE24FDDBE12685AEEDFCB61, PRO_8DA3EDEA80E14E0F9E8D7C81F4632BA5, 苏留先生第16次借款, 个人生活消费, NEW, 360, 0.10, 0.15, 0.05, FIXED_REPAYMENT, 2000.00, REPAYING, 2021-08-27T15:03:16.000+0800, 2021-08-27T15:04:05.000+0800, 1, 0, REQ_1FDFD7F82622430F8A85E193C5ED622A, 1431150392267853825]
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:55,047 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - <==    Updates: 1
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:55,386 INFO [Eureka-EvictionTimer][AbstractInstanceRegistry.java:1250] - Running the evict task with compensationTime 1ms
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:56,146 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: depository-agent-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:56,737 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[${project.name}][${env:SERVER_PORT}] 2021-08-27 15:05:56,862 INFO [http-nio-53000-exec-2][AbstractInstanceRegistry.java:266] - Registered instance REPAYMENT-SERVICE/repayment-service:192.168.137.1:53080 with status UP (replication=false)

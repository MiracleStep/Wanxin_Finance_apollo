[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:00:43,427 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:00:44,434 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:01:29,326 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:05:43,426 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:05:44,432 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:06:29,326 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:10:43,424 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:10:44,430 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:11:29,327 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:15:43,424 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:15:44,429 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:16:29,328 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:20:43,424 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:20:44,431 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:21:29,329 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:25:43,424 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:25:44,428 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:26:29,329 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:30:43,424 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:30:44,429 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:31:29,330 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:35:43,425 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:35:44,429 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:36:29,331 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:40:43,426 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:40:44,431 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:41:29,332 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:45:43,424 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:45:44,430 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:46:29,333 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:50:43,425 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:50:44,430 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:51:29,334 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:53:43,846 ERROR [http-nio-53060-exec-2][GlobalExceptionHandler.java:45] - 【系统异常】{}
java.lang.NullPointerException
	at cn.itcast.wanxinp2p.transaction.service.ProjectServiceImpl.queryProjectsByQueryDTO(ProjectServiceImpl.java:121)
	at cn.itcast.wanxinp2p.transaction.service.ProjectServiceImpl$$FastClassBySpringCGLIB$$997f0e9f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.itcast.wanxinp2p.transaction.service.ProjectServiceImpl$$EnhancerBySpringCGLIB$$dd5f2113.queryProjectsByQueryDTO(<generated>)
	at cn.itcast.wanxinp2p.transaction.controller.TransactionController.queryProjects(TransactionController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:33,400 INFO [Thread-116][EurekaServiceRegistry.java:65] - Unregistering application TRANSACTION-SERVICE with eureka with status DOWN
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:33,400 WARN [Thread-116][DiscoveryClient.java:1303] - Saw local status change event StatusChangeEvent [timestamp=1629258873400, current=DOWN, previous=UP]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:33,402 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:826] - DiscoveryClient_TRANSACTION-SERVICE/transaction-service:172.19.130.1:53060: registering service...
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:33,412 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:835] - DiscoveryClient_TRANSACTION-SERVICE/transaction-service:172.19.130.1:53060 - registration status: 204
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:33,442 INFO [Thread-116][QuartzScheduler.java:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:33,447 INFO [Thread-116][SchedulerFactoryBean.java:844] - Shutting down Quartz Scheduler
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:33,447 INFO [Thread-116][QuartzScheduler.java:666] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:33,447 INFO [Thread-116][QuartzScheduler.java:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:33,450 INFO [Thread-116][QuartzScheduler.java:740] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:33,454 INFO [Thread-116][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:33,484 INFO [Thread-116][DruidDataSource.java:1885] - {dataSource-1} closing ...
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:33,490 INFO [Thread-116][DruidDataSource.java:1955] - {dataSource-1} closed
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:33,490 INFO [Thread-116][DruidDataSource.java:1885] - {dataSource-2} closing ...
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:33,490 INFO [Thread-116][DruidDataSource.java:1955] - {dataSource-2} closed
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:33,515 INFO [Thread-116][DiscoveryClient.java:888] - Shutting down DiscoveryClient ...
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:36,516 INFO [Thread-116][DiscoveryClient.java:922] - Unregistering ...
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:36,534 INFO [Thread-116][DiscoveryClient.java:924] - DiscoveryClient_TRANSACTION-SERVICE/transaction-service:172.19.130.1:53060 - deregister  status: 200
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:36,571 INFO [Thread-116][DiscoveryClient.java:911] - Completed shut down of DiscoveryClient
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:55,562 INFO [main][DefaultApplicationProvider.java:85] - App ID is set to transaction-service by app.id property from System Property
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:55,569 INFO [main][DefaultServerProvider.java:108] - Environment is set to [dev] by JVM system property 'env'.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:55,612 WARN [main][DefaultMetaServerProvider.java:39] - Could not find meta server address, because it is not available in neither (1) JVM system property 'apollo.meta', (2) OS env variable 'APOLLO_META' (3) property 'apollo.meta' from server.properties nor (4) property 'apollo.meta' from app.properties
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:54:55,617 INFO [main][MetaDomainConsts.java:93] - Located meta server address http://192.168.85.131:8080 for env DEV from com.ctrip.framework.apollo.core.internals.LegacyMetaServerProvider
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:01,748 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:02,754 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103 [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:02,763 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:03,773 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:03,781 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:04,791 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:05,804 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:05,812 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:06,822 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:06,823 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\transaction-service\config-cache\transaction-service+DEFAULT+micro_service.spring-cloud-feign.properties]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:06,831 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:07,837 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:07,838 WARN [main][DefaultConfig.java:61] - Init Apollo Local Config failed - namespace: micro_service.spring-cloud-feign, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\transaction-service\config-cache\transaction-service+DEFAULT+micro_service.spring-cloud-feign.properties].
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:07,861 WARN [main][DefaultConfig.java:95] - Could not load config for namespace micro_service.spring-cloud-feign from Apollo, please check whether the configs are released in Apollo! Return default value now!
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:07,862 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:09,261 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:09,547 INFO [main][GenericScope.java:294] - BeanFactory id=4ff5fc92-ce0a-3b9a-a5b6-b64b5cd0bb79
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:09,627 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'cn.itcast.wanxinp2p.transaction.agent.ConsumerApiAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:09,629 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'cn.itcast.wanxinp2p.transaction.agent.ContentSearchApiAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:09,631 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'cn.itcast.wanxinp2p.transaction.agent.DepositoryAgentApiAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:09,730 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2c5a8eec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:09,756 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$487491e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:10,181 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 53060 (http)
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:10,197 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-53060"]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:10,206 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:10,207 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:10,214 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\jdk1.8.0_91\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\VMware\VMware Workstation\bin\;D:\Oracle\bin;C:\Program Files\AdoptOpenJDK\jdk-11.0.9.101-hotspot\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\python38;D:\MySQL\mysql-8.0.19-winx64;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\MySQL\mysql-5.6.47-winx64\bin;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\python3.8;D:\python3.8\Scripts;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\java\jdk-14.0.2\bin;D:\Program Files (x86)\Git\cmd;D:\jdk1.8.0_91\bin;C:\MinGW\bin;C:\Program Files\Pandoc\;D:\apache-maven-3.6.3\bin;C:\Program Files (x86)\Common Files\Thunder Network\KanKan\Codecs;D:\nodejs9.4\;D:\nodejs9.4\npm_modules;D:\matlab\runtime\win64;D:\matlab\bin;D:\matlab\polyspace\bin;C:\Program Files\erl9.3\bin;D:\ffmpeg-20180227-fa0c9d6-win64-static\bin;C:\Program Files\OpenSSL-Win64\bin;D:\rocketmq-all-4.5.2-bin-release\bin;D:\Ruby25\bin;C:\Users\suxiang\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\Microsoft VS Code\bin;D:\MySQL\mysql-8.0.19-winx64\bin;D:\python3.8;D:\Program Files (x86)\WebStorm 2021.1.1\bin;;C:\Program Files (x86)\GitHub CLI\;D:\Program Files (x86)\PyCharm 2021.1.1\bin;;D:\Program Files (x86)\IntelliJ IDEA 2021.1.1\bin;;D:\Program Files (x86)\CLion 2020.1\bin;;C:\Users\suxiang\AppData\Local\GitHubDesktop\bin;C:\Users\suxiang\AppData\Roaming\npm;;.]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:10,405 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:10,405 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 2527 ms
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:10,571 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:10,572 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:10,588 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2792c28
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:11,741 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:11,930 INFO [main][DruidDataSource.java:1002] - {dataSource-2} inited
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:15,135 INFO [main][InetUtils.java:170] - Cannot determine local hostname
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:16,711 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:16,805 INFO [main][PropertySourcedRequestMappingHandlerMapping.java:69] - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:16,825 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:16,826 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:17,223 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:17,629 INFO [main][StdSchedulerFactory.java:1208] - Using default implementation for ThreadExecutor
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:17,654 INFO [main][SchedulerSignalerImpl.java:61] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:17,654 INFO [main][QuartzScheduler.java:229] - Quartz Scheduler v.2.3.0 created.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:17,656 INFO [main][RAMJobStore.java:155] - RAMJobStore initialized.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:17,656 INFO [main][QuartzScheduler.java:294] - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:17,657 INFO [main][StdSchedulerFactory.java:1362] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:17,657 INFO [main][StdSchedulerFactory.java:1366] - Quartz scheduler version: 2.3.0
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:17,658 INFO [main][QuartzScheduler.java:2287] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@395abe85
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:21,622 INFO [main][InetUtils.java:170] - Cannot determine local hostname
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:21,842 INFO [main][InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:21,879 INFO [main][DiscoveryClient.java:349] - Initializing Eureka in region us-east-1
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:22,020 INFO [main][DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:22,021 INFO [main][DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:22,173 INFO [main][DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:22,173 INFO [main][DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:22,549 INFO [main][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:23,742 INFO [main][DiscoveryClient.java:958] - Disable delta property : false
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:23,743 INFO [main][DiscoveryClient.java:959] - Single vip registry refresh property : null
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:23,743 INFO [main][DiscoveryClient.java:960] - Force full registry fetch : false
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:23,743 INFO [main][DiscoveryClient.java:961] - Application is null : false
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:23,743 INFO [main][DiscoveryClient.java:962] - Registered Applications size is zero : true
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:23,744 INFO [main][DiscoveryClient.java:964] - Application version is -1: true
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:23,744 INFO [main][DiscoveryClient.java:1047] - Getting all instance registry info from the eureka server
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:23,977 INFO [main][DiscoveryClient.java:1056] - The response status is 200
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:23,980 INFO [main][DiscoveryClient.java:1270] - Starting heartbeat executor: renew interval is: 30
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:23,985 INFO [main][InstanceInfoReplicator.java:60] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:23,990 INFO [main][DiscoveryClient.java:449] - Discovery Client initialized at timestamp 1629258923989 with initial instances count: 5
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:23,991 INFO [main][EurekaServiceRegistry.java:42] - Registering application TRANSACTION-SERVICE with eureka with status UP
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:23,992 INFO [main][DiscoveryClient.java:1305] - Saw local status change event StatusChangeEvent [timestamp=1629258923992, current=UP, previous=STARTING]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:23,995 INFO [main][DocumentationPluginsBootstrapper.java:160] - Context refreshed
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:23,996 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:826] - DiscoveryClient_TRANSACTION-SERVICE/transaction-service:172.19.130.1:53060: registering service...
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:24,006 INFO [main][DocumentationPluginsBootstrapper.java:163] - Found 1 custom documentation plugin(s)
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:24,035 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:835] - DiscoveryClient_TRANSACTION-SERVICE/transaction-service:172.19.130.1:53060 - registration status: 204
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:24,041 INFO [main][ApiListingReferenceScanner.java:41] - Scanning for api listing references
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:24,146 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: queryProjectsUsingPOST_1
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:24,161 INFO [main][SchedulerFactoryBean.java:726] - Starting Quartz Scheduler now
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:24,161 INFO [main][QuartzScheduler.java:547] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:24,172 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-53060"]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:24,204 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 53060 (http) with context path '/transaction'
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:24,205 INFO [main][EurekaAutoServiceRegistration.java:141] - Updating port to 53060
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:24,210 INFO [main][StartupInfoLogger.java:59] - Started TransactionService in 36.892 seconds (JVM running for 41.539)
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:24,302 INFO [RMI TCP Connection(1)-172.19.130.1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:24,303 INFO [RMI TCP Connection(1)-172.19.130.1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:24,314 INFO [RMI TCP Connection(1)-172.19.130.1][FrameworkServlet.java:546] - Completed initialization in 11 ms
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:27,535 INFO [RMI TCP Connection(3)-172.19.130.1][SQLLogger.java:89] - Rule Type: sharding
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:27,535 INFO [RMI TCP Connection(3)-172.19.130.1][SQLLogger.java:89] - Logic SQL: /* ping */ SELECT 1
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:27,536 INFO [RMI TCP Connection(3)-172.19.130.1][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[], parametersIndex=0, logicSQL=/* ping */ SELECT 1)), containStar=false, firstSelectItemStartIndex=18, selectListStopIndex=18, groupByLastIndex=0, items=[CommonSelectItem(expression=1, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:55:27,537 INFO [RMI TCP Connection(3)-172.19.130.1][SQLLogger.java:89] - Actual SQL: ds0 ::: /* ping */ SELECT 1
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:03,100 INFO [Thread-79][EurekaServiceRegistry.java:65] - Unregistering application TRANSACTION-SERVICE with eureka with status DOWN
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:03,100 WARN [Thread-79][DiscoveryClient.java:1303] - Saw local status change event StatusChangeEvent [timestamp=1629259023100, current=DOWN, previous=UP]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:03,100 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:826] - DiscoveryClient_TRANSACTION-SERVICE/transaction-service:172.19.130.1:53060: registering service...
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:03,105 INFO [Thread-79][QuartzScheduler.java:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:03,107 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:835] - DiscoveryClient_TRANSACTION-SERVICE/transaction-service:172.19.130.1:53060 - registration status: 204
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:03,107 INFO [Thread-79][SchedulerFactoryBean.java:844] - Shutting down Quartz Scheduler
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:03,107 INFO [Thread-79][QuartzScheduler.java:666] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:03,107 INFO [Thread-79][QuartzScheduler.java:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:03,108 INFO [Thread-79][QuartzScheduler.java:740] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:03,110 INFO [Thread-79][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:03,122 INFO [Thread-79][DruidDataSource.java:1885] - {dataSource-1} closing ...
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:03,128 INFO [Thread-79][DruidDataSource.java:1955] - {dataSource-1} closed
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:03,129 INFO [Thread-79][DruidDataSource.java:1885] - {dataSource-2} closing ...
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:03,130 INFO [Thread-79][DruidDataSource.java:1955] - {dataSource-2} closed
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:03,135 INFO [Thread-79][DiscoveryClient.java:888] - Shutting down DiscoveryClient ...
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:06,137 INFO [Thread-79][DiscoveryClient.java:922] - Unregistering ...
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:06,141 INFO [Thread-79][DiscoveryClient.java:924] - DiscoveryClient_TRANSACTION-SERVICE/transaction-service:172.19.130.1:53060 - deregister  status: 200
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:06,149 INFO [Thread-79][DiscoveryClient.java:911] - Completed shut down of DiscoveryClient
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:24,724 INFO [main][DefaultApplicationProvider.java:85] - App ID is set to transaction-service by app.id property from System Property
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:24,732 INFO [main][DefaultServerProvider.java:108] - Environment is set to [dev] by JVM system property 'env'.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:24,788 WARN [main][DefaultMetaServerProvider.java:39] - Could not find meta server address, because it is not available in neither (1) JVM system property 'apollo.meta', (2) OS env variable 'APOLLO_META' (3) property 'apollo.meta' from server.properties nor (4) property 'apollo.meta' from app.properties
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:24,794 INFO [main][MetaDomainConsts.java:93] - Located meta server address http://192.168.85.131:8080 for env DEV from com.ctrip.framework.apollo.core.internals.LegacyMetaServerProvider
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:30,486 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:31,496 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103 [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:31,509 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:32,523 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:32,537 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:33,544 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:34,551 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:34,563 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:35,571 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:35,572 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\transaction-service\config-cache\transaction-service+DEFAULT+micro_service.spring-cloud-feign.properties]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:35,580 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:36,591 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.85.131:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=192.168.0.103&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:36,592 WARN [main][DefaultConfig.java:61] - Init Apollo Local Config failed - namespace: micro_service.spring-cloud-feign, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\transaction-service\config-cache\transaction-service+DEFAULT+micro_service.spring-cloud-feign.properties].
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:36,624 WARN [main][DefaultConfig.java:95] - Could not load config for namespace micro_service.spring-cloud-feign from Apollo, please check whether the configs are released in Apollo! Return default value now!
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:36,626 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:38,293 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:38,542 INFO [main][GenericScope.java:294] - BeanFactory id=4ff5fc92-ce0a-3b9a-a5b6-b64b5cd0bb79
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:38,599 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'cn.itcast.wanxinp2p.transaction.agent.ConsumerApiAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:38,600 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'cn.itcast.wanxinp2p.transaction.agent.ContentSearchApiAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:38,602 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'cn.itcast.wanxinp2p.transaction.agent.DepositoryAgentApiAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:38,692 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$de204afd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:38,723 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fa3a4dfa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:39,100 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 53060 (http)
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:39,120 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-53060"]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:39,130 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:39,131 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:39,138 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\jdk1.8.0_91\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\VMware\VMware Workstation\bin\;D:\Oracle\bin;C:\Program Files\AdoptOpenJDK\jdk-11.0.9.101-hotspot\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\python38;D:\MySQL\mysql-8.0.19-winx64;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\MySQL\mysql-5.6.47-winx64\bin;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\python3.8;D:\python3.8\Scripts;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\java\jdk-14.0.2\bin;D:\Program Files (x86)\Git\cmd;D:\jdk1.8.0_91\bin;C:\MinGW\bin;C:\Program Files\Pandoc\;D:\apache-maven-3.6.3\bin;C:\Program Files (x86)\Common Files\Thunder Network\KanKan\Codecs;D:\nodejs9.4\;D:\nodejs9.4\npm_modules;D:\matlab\runtime\win64;D:\matlab\bin;D:\matlab\polyspace\bin;C:\Program Files\erl9.3\bin;D:\ffmpeg-20180227-fa0c9d6-win64-static\bin;C:\Program Files\OpenSSL-Win64\bin;D:\rocketmq-all-4.5.2-bin-release\bin;D:\Ruby25\bin;C:\Users\suxiang\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\Microsoft VS Code\bin;D:\MySQL\mysql-8.0.19-winx64\bin;D:\python3.8;D:\Program Files (x86)\WebStorm 2021.1.1\bin;;C:\Program Files (x86)\GitHub CLI\;D:\Program Files (x86)\PyCharm 2021.1.1\bin;;D:\Program Files (x86)\IntelliJ IDEA 2021.1.1\bin;;D:\Program Files (x86)\CLion 2020.1\bin;;C:\Users\suxiang\AppData\Local\GitHubDesktop\bin;C:\Users\suxiang\AppData\Roaming\npm;;.]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:39,336 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:39,336 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 2684 ms
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:39,476 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:39,478 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:39,501 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@51f4439e
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:40,335 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:40,454 INFO [main][DruidDataSource.java:1002] - {dataSource-2} inited
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:43,416 INFO [main][InetUtils.java:170] - Cannot determine local hostname
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:45,052 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:45,154 INFO [main][PropertySourcedRequestMappingHandlerMapping.java:69] - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:45,176 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:45,177 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:45,617 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:46,210 INFO [main][StdSchedulerFactory.java:1208] - Using default implementation for ThreadExecutor
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:46,233 INFO [main][SchedulerSignalerImpl.java:61] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:46,234 INFO [main][QuartzScheduler.java:229] - Quartz Scheduler v.2.3.0 created.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:46,235 INFO [main][RAMJobStore.java:155] - RAMJobStore initialized.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:46,236 INFO [main][QuartzScheduler.java:294] - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:46,236 INFO [main][StdSchedulerFactory.java:1362] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:46,236 INFO [main][StdSchedulerFactory.java:1366] - Quartz scheduler version: 2.3.0
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:46,237 INFO [main][QuartzScheduler.java:2287] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@648f48d3
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:49,301 INFO [main][InetUtils.java:170] - Cannot determine local hostname
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:49,521 INFO [main][InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:49,563 INFO [main][DiscoveryClient.java:349] - Initializing Eureka in region us-east-1
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:49,700 INFO [main][DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:49,701 INFO [main][DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:49,887 INFO [main][DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:49,888 INFO [main][DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:50,272 INFO [main][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,360 INFO [main][DiscoveryClient.java:958] - Disable delta property : false
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,360 INFO [main][DiscoveryClient.java:959] - Single vip registry refresh property : null
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,361 INFO [main][DiscoveryClient.java:960] - Force full registry fetch : false
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,361 INFO [main][DiscoveryClient.java:961] - Application is null : false
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,361 INFO [main][DiscoveryClient.java:962] - Registered Applications size is zero : true
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,362 INFO [main][DiscoveryClient.java:964] - Application version is -1: true
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,362 INFO [main][DiscoveryClient.java:1047] - Getting all instance registry info from the eureka server
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,611 INFO [main][DiscoveryClient.java:1056] - The response status is 200
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,616 INFO [main][DiscoveryClient.java:1270] - Starting heartbeat executor: renew interval is: 30
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,621 INFO [main][InstanceInfoReplicator.java:60] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,626 INFO [main][DiscoveryClient.java:449] - Discovery Client initialized at timestamp 1629259071625 with initial instances count: 5
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,629 INFO [main][EurekaServiceRegistry.java:42] - Registering application TRANSACTION-SERVICE with eureka with status UP
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,630 INFO [main][DiscoveryClient.java:1305] - Saw local status change event StatusChangeEvent [timestamp=1629259071630, current=UP, previous=STARTING]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,633 INFO [main][DocumentationPluginsBootstrapper.java:160] - Context refreshed
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,633 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:826] - DiscoveryClient_TRANSACTION-SERVICE/transaction-service:172.19.130.1:53060: registering service...
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,645 INFO [main][DocumentationPluginsBootstrapper.java:163] - Found 1 custom documentation plugin(s)
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,682 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:835] - DiscoveryClient_TRANSACTION-SERVICE/transaction-service:172.19.130.1:53060 - registration status: 204
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,694 INFO [main][ApiListingReferenceScanner.java:41] - Scanning for api listing references
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,836 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: queryProjectsUsingPOST_1
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,854 INFO [main][SchedulerFactoryBean.java:726] - Starting Quartz Scheduler now
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,854 INFO [main][QuartzScheduler.java:547] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,868 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-53060"]
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,906 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 53060 (http) with context path '/transaction'
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,906 INFO [main][EurekaAutoServiceRegistration.java:141] - Updating port to 53060
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:51,909 INFO [main][StartupInfoLogger.java:59] - Started TransactionService in 34.932 seconds (JVM running for 38.858)
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:54,410 INFO [RMI TCP Connection(7)-172.19.130.1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:54,411 INFO [RMI TCP Connection(7)-172.19.130.1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:54,423 INFO [RMI TCP Connection(7)-172.19.130.1][FrameworkServlet.java:546] - Completed initialization in 12 ms
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:54,959 INFO [RMI TCP Connection(6)-172.19.130.1][SQLLogger.java:89] - Rule Type: sharding
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:54,960 INFO [RMI TCP Connection(6)-172.19.130.1][SQLLogger.java:89] - Logic SQL: /* ping */ SELECT 1
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:54,960 INFO [RMI TCP Connection(6)-172.19.130.1][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[], parametersIndex=0, logicSQL=/* ping */ SELECT 1)), containStar=false, firstSelectItemStartIndex=18, selectListStopIndex=18, groupByLastIndex=0, items=[CommonSelectItem(expression=1, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:57:54,960 INFO [RMI TCP Connection(6)-172.19.130.1][SQLLogger.java:89] - Actual SQL: ds0 ::: /* ping */ SELECT 1
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:59:49,890 WARN [http-nio-53060-exec-3][DefaultConfig.java:95] - Could not load config for namespace micro_service.spring-cloud-feign from Apollo, please check whether the configs are released in Apollo! Return default value now!
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:59:50,105 INFO [http-nio-53060-exec-3][ChainedDynamicProperty.java:115] - Flipping property: content-search-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:59:50,127 INFO [http-nio-53060-exec-3][ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-content-search-service
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:59:50,128 INFO [http-nio-53060-exec-3][BaseLoadBalancer.java:197] - Client: content-search-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=content-search-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:59:50,135 INFO [http-nio-53060-exec-3][DynamicServerListLoadBalancer.java:222] - Using serverListUpdater PollingServerListUpdater
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:59:50,139 INFO [http-nio-53060-exec-3][DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client content-search-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=content-search-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2c2c9442
[wanxinp2p-transaction-service][${env:SERVER_PORT}] 2021-08-18 11:59:50,224 ERROR [http-nio-53060-exec-3][GlobalExceptionHandler.java:45] - 【系统异常】{}
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: content-search-service
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:73)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:108)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:78)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy161.queryProjectIndex(Unknown Source)
	at cn.itcast.wanxinp2p.transaction.service.ProjectServiceImpl.queryProjects(ProjectServiceImpl.java:207)
	at cn.itcast.wanxinp2p.transaction.service.ProjectServiceImpl$$FastClassBySpringCGLIB$$997f0e9f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.itcast.wanxinp2p.transaction.service.ProjectServiceImpl$$EnhancerBySpringCGLIB$$f2758f4d.queryProjects(<generated>)
	at cn.itcast.wanxinp2p.transaction.controller.TransactionController.queryProjects(TransactionController.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: content-search-service
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:65)
	... 73 more

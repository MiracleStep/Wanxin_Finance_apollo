[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:46,167 INFO [main][DefaultApplicationProvider.java:85] - App ID is set to account-service by app.id property from System Property
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:46,235 INFO [main][DefaultServerProvider.java:108] - Environment is set to [dev] by JVM system property 'env'.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:46,340 WARN [main][DefaultMetaServerProvider.java:39] - Could not find meta server address, because it is not available in neither (1) JVM system property 'apollo.meta', (2) OS env variable 'APOLLO_META' (3) property 'apollo.meta' from server.properties nor (4) property 'apollo.meta' from app.properties
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:46,364 INFO [main][MetaDomainConsts.java:93] - Located meta server address http://192.168.85.131:8080 for env DEV from com.ctrip.framework.apollo.core.internals.LegacyMetaServerProvider
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:50,594 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:52,641 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:52,647 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:52,686 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 14ms. Found 0 repository interfaces.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:52,874 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:53,061 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'com.ctrip.framework.apollo.spring.boot.ApolloAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:53,442 INFO [main][GenericScope.java:294] - BeanFactory id=e3a36265-7489-38a4-9236-684be88e36ff
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:53,530 WARN [main][PropertySourcesDeducer.java:75] - Multiple PropertySourcesPlaceholderConfigurer beans registered [propertySourcesPlaceholderConfigurer, org.springframework.context.support.PropertySourcesPlaceholderConfigurer], falling back to Environment
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:53,657 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:53,682 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration$$EnhancerBySpringCGLIB$$a4907832] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:53,713 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketmq-org.apache.rocketmq.spring.autoconfigure.RocketMQProperties' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:55,717 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'defaultMQProducer' of type [org.apache.rocketmq.client.producer.DefaultMQProducer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:55,722 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$d78de8c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:55,729 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$89daaae0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:55,734 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$44f190cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:55,768 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:55,773 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:55,788 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$6bbd07fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:55,801 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:55,802 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$b9998656] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:55,964 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:55,966 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:55,973 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:55,978 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:08:56,029 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:00,907 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketMQTemplate' of type [org.apache.rocketmq.spring.core.RocketMQTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:00,910 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'transactionHandlerRegistry' of type [org.apache.rocketmq.spring.config.TransactionHandlerRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:01,047 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7bfa6936] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:01,324 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:01,344 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:01,346 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'hmilyFeignConfiguration' of type [org.dromara.hmily.springcloud.configuration.HmilyFeignConfiguration$$EnhancerBySpringCGLIB$$aa4b8202] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:01,378 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$98146c33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:02,111 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 53030 (http)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:02,151 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-53030"]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:02,178 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:02,180 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:02,192 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\jdk1.8.0_91\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\Program Files (x86)\vmware\bin\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\jdk1.8.0_91\bin;D:\nodejs9.4;D:\python3.8\Scripts;D:\MySQL\mysql-5.6.47-winx64\bin;D:\redis-2.8.9;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files (x86)\Git\cmd;C:\Program Files\Git\cmd;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\nodejs\;C:\ProgramData\chocolatey\bin;D:\Program Files (x86)\Ruby26\bin;C:\Users\25855\AppData\Local\Microsoft\WindowsApps;C:\Users\25855\AppData\Roaming\npm;.]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:02,530 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:02,530 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 11915 ms
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:02,884 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:02,885 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:02,914 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@281ca256
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:03,181 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:03,754 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:06,248 INFO [main][HikariDataSource.java:110] - HikariPool-1 - Starting...
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:06,284 INFO [main][HikariDataSource.java:123] - HikariPool-1 - Start completed.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:06,417 INFO [main][HmilyLogo.java:49] - 


    __  __          _ __     
   / / / /___ ___  (_) /_  __
  / /_/ / __ `__ \/ / / / / /
 / __  / / / / / / / / /_/ / 
/_/ /_/_/ /_/ /_/_/_/\__, /  
                    /____/   

 :: Hmily :: (v2.0.5-RELEASE)

[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:06,436 INFO [main][AutowiredAnnotationBeanPostProcessor.java:342] - Inconsistent constructor declaration on bean with name 'hmilyTransactionSelfRecoveryScheduled': single autowire-marked constructor flagged as optional - this constructor is effectively required since there is no default constructor to fall back to: public org.dromara.hmily.core.schedule.HmilyTransactionSelfRecoveryScheduled(org.dromara.hmily.common.config.HmilyConfig)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:08,384 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:08,861 INFO [main][PropertySourcedRequestMappingHandlerMapping.java:69] - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:08,961 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:08,961 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:09,330 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:11,558 INFO [main][SLF4JLogger.java:71] - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:12,122 INFO [cluster-ClusterId{value='6127846778625965cc749b0a', description='null'}-localhost:27017][SLF4JLogger.java:71] - Opened connection [connectionId{localValue:1, serverValue:1}] to localhost:27017
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:12,127 INFO [cluster-ClusterId{value='6127846778625965cc749b0a', description='null'}-localhost:27017][SLF4JLogger.java:71] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 25]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1926700}
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:12,674 INFO [main][InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:12,721 INFO [main][DiscoveryClient.java:349] - Initializing Eureka in region us-east-1
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:12,813 INFO [main][DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:12,814 INFO [main][DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:12,972 INFO [main][DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:12,973 INFO [main][DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:13,274 INFO [main][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:13,785 INFO [main][DiscoveryClient.java:958] - Disable delta property : false
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:13,785 INFO [main][DiscoveryClient.java:959] - Single vip registry refresh property : null
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:13,786 INFO [main][DiscoveryClient.java:960] - Force full registry fetch : false
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:13,786 INFO [main][DiscoveryClient.java:961] - Application is null : false
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:13,786 INFO [main][DiscoveryClient.java:962] - Registered Applications size is zero : true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:13,786 INFO [main][DiscoveryClient.java:964] - Application version is -1: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:13,786 INFO [main][DiscoveryClient.java:1047] - Getting all instance registry info from the eureka server
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:14,004 INFO [main][DiscoveryClient.java:1056] - The response status is 200
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:14,009 INFO [main][DiscoveryClient.java:1270] - Starting heartbeat executor: renew interval is: 30
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:14,013 INFO [main][InstanceInfoReplicator.java:60] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:14,019 INFO [main][DiscoveryClient.java:449] - Discovery Client initialized at timestamp 1629979754017 with initial instances count: 3
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:14,022 INFO [main][EurekaServiceRegistry.java:42] - Registering application ACCOUNT-SERVICE with eureka with status UP
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:14,023 INFO [main][DiscoveryClient.java:1305] - Saw local status change event StatusChangeEvent [timestamp=1629979754023, current=UP, previous=STARTING]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:14,026 INFO [main][DocumentationPluginsBootstrapper.java:160] - Context refreshed
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:14,026 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:826] - DiscoveryClient_ACCOUNT-SERVICE/account-service:192.168.0.108:53030: registering service...
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:14,037 INFO [main][DocumentationPluginsBootstrapper.java:163] - Found 1 custom documentation plugin(s)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:14,078 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:835] - DiscoveryClient_ACCOUNT-SERVICE/account-service:192.168.0.108:53030 - registration status: 204
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:14,090 INFO [main][ApiListingReferenceScanner.java:41] - Scanning for api listing references
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:14,294 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-53030"]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:14,316 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 53030 (http) with context path '/account'
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:14,317 INFO [main][EurekaAutoServiceRegistration.java:141] - Updating port to 53030
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:14,319 INFO [main][StartupInfoLogger.java:59] - Started Wanxinp2pAccountServiceApplication in 38.294 seconds (JVM running for 45.81)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:15,095 INFO [RMI TCP Connection(6)-192.168.85.2][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:15,095 INFO [RMI TCP Connection(6)-192.168.85.2][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:09:15,110 INFO [RMI TCP Connection(6)-192.168.85.2][FrameworkServlet.java:546] - Completed initialization in 15 ms
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:11:14,294 INFO [hmilyTransaction-hmily-transaction-self-recovery-2][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:12:14,302 INFO [hmilyTransaction-hmily-transaction-self-recovery-2][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:13:14,305 INFO [hmilyTransaction-hmily-transaction-self-recovery-2][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:14:13,790 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:14:14,307 INFO [hmilyTransaction-hmily-transaction-self-recovery-2][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:15:14,314 INFO [hmilyTransaction-hmily-transaction-self-recovery-2][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:16:14,317 INFO [hmilyTransaction-hmily-transaction-self-recovery-2][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:17:14,319 INFO [hmilyTransaction-hmily-transaction-self-recovery-2][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:18:14,322 INFO [hmilyTransaction-hmily-transaction-self-recovery-2][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:19:13,795 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:19:14,324 INFO [hmilyTransaction-hmily-transaction-self-recovery-2][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:20:14,326 INFO [hmilyTransaction-hmily-transaction-self-recovery-2][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:21:14,329 INFO [hmilyTransaction-hmily-transaction-self-recovery-2][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:22:14,331 INFO [hmilyTransaction-hmily-transaction-self-recovery-2][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:23:14,336 INFO [hmilyTransaction-hmily-transaction-self-recovery-2][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:24:13,796 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:24:14,339 INFO [hmilyTransaction-hmily-transaction-self-recovery-2][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:25:14,340 INFO [hmilyTransaction-hmily-transaction-self-recovery-2][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:26:14,343 INFO [hmilyTransaction-hmily-transaction-self-recovery-2][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-account-service][${env:SERVER_PORT}] 2021-08-26 20:27:14,345 INFO [hmilyTransaction-hmily-transaction-self-recovery-2][LogUtil.java:87] - self recovery execute delayTime:60
